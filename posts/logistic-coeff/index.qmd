---
title: Logistic regression coefficients
description: Description here
author: David Harper, CFA, FRM
date: 2023-08-31
categories: [code, analysis]
execute: 
  echo: true
  warning: false
---

```{r}
library(tidyverse) 
library(labelled)
library(gt)
# library(gtsummary) decided not to use but cool
# library(gtExtras) decided not to use but cool

# set.seed(xzy)
set.seed(374)

sample_size <- 800
lcfeatures1 <- read_csv("lcfeatures.csv") # sample 10,000 from large LC dataset
lcfeatures1 <- lcfeatures1 |> sample_n(sample_size)

# recoding 
lcfeatures1$emp_length_n <- gsub("< 1", "0", lcfeatures1$emp_length)
lcfeatures1$emp_length_n2 <- parse_number(lcfeatures1$emp_length_n)
lcfeatures1$term_n <- parse_number(lcfeatures1$term)

lcfeatures1$home_ownership_simpler <- recode(lcfeatures1$home_ownership,
                                             "MORTGAGE" = "OWN",
                                             "ANY" = "RENT",
                                             "NONE" = "RENT")

lcfeatures1$mortgage_simpler <- recode(lcfeatures1$home_ownership,
                                       "OWN" = "NO",
                                       "ANY" = "NO",
                                       "NONE" = "NO",
                                       "RENT" = "NO",
                                       "MORTGAGE" = "YES")

lcfeatures1$loan_status_coded <- recode(lcfeatures1$loan_status,
                                        "Charged Off" = "Default",
                                        "Does not meet the credit policy. Status:Charged Off" = "Default",
                                        "Late (31-120 days)" = "Default",
                                        .default = "Paid")

lcfeatures1$home_ownership_bern <- recode(lcfeatures1$home_ownership_simpler,
                                          "RENT" = 0,
                                          "OWN" = 1)

lcfeatures1$mortgage_bern <- recode(lcfeatures1$mortgage_simpler,
                                          "NO" = 0,
                                          "YES" = 1)

lcfeatures1$loan_status_bern <- recode(lcfeatures1$loan_status_coded,
                                          "Paid" = 0,
                                          "Default" = 1)

# logistic regression model
logit_model_1 <- glm(formula = loan_status_bern ~ loan_amnt + term_n + int_rate + installment + 
        emp_length_n2 + annual_inc + pub_rec_bankruptcies,
        family = binomial(link = "logit"), data = lcfeatures1)

# tbl_regression(logit_model1, exponentiate = FALSE)
# tbl_regression(logit_model1, exponentiate = TRUE)

coef_table <- coef(summary(logit_model_1)) 
coef_tbl  <-  as_tibble(coef_table)
Coeff_labels <- c("(Intercept)", "Amount", "Term", "Interest rate", "Installment", 
                 "Employ Hist", "Income","Bankruptcies")
coef_tbl <- cbind(Coeff_labels, coef_tbl)

coef_tbl_gt <- coef_tbl %>% gt() |> 
    opt_table_font(stack = "humanist") |>
    fmt_number(columns = everything(),
               decimals = 3)
coef_tbl_gt

```

If we use predict() with type = "response", then the logistic regression returns the vector of predicted probabilities (from zero to 100%). Then we can classify the Bernoulli prediction (0 = nondefault, 1 = default) as a function of our desired conservative/aggressive threshold. 

```{r}
predicted_probs <- predict(logit_model_1, lcfeatures1, type = "response")
thresholds <- c(0.4, 0.3, 0.2, 0.1, 0.05, 0.010)
thresholds |> map_int(\(x) sum(ifelse(predicted_probs > x, 1, 0), na.rm = TRUE))

```
