{
  "hash": "516385881ed674689fdf674235b8fb3e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Stress test (simulation) of WFC balance sheet and income statement\ndescription: description goes here\nauthor: David Harper, CFA, FRM\ndate: 2024-05-15\ncategories: [code, analysis]\nexecute: \n  echo: true\n  warning: false\n---\n\n\n\n## first code block: retrieve data from filing tables\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbalance_df <- readRDS(\"balance_df.rds\")\nincome_df <- readRDS(\"income_df.rds\")\n\n# balance_df (actual calcs below)\n# \n# balance_df: Calculated Variables (7) as pulled from 10Q\n# Total Debt Securities (TotDebtSec):   Sum of Trading, Available-for-Sale, and Held-to-Maturity Debt Securities.\n# Net Loans (NetLoans):                 Loans plus Allowance for Loan Losses.\n# Total Deposits (TotDep):              Sum of Noninterest-Bearing and Interest-Bearing Deposits.\n# Total Liabilities (TotLiab):          Sum of Total Deposits, Short-Term Borrowings, Derivative Liabilities, \n#                                       Accrued Expenses and Other Liabilities, and Long-Term Debt.\n# Total Shareholders' Equity (TotSHREq):Sum of Preferred Stock, Common Stock, Additional Paid-In Capital, \n#                                       Retained  Earnings, Accumulated Other Comprehensive Loss, Treasury Stock, \n#                                       Unearned ESOP Shares, and Noncontrolling Interests.\n# Total Assets (TotAssets):             Sum of all asset accounts plus Total Liabilities and Equity.\n# Total Liabilities and Equity (TotLiabEq):Sum of Total Liabilities and Total Shareholders' Equity.\n#\n# balance_df: Calculated Variables (7) with shorter names\n# balance_df$TotDebtSec <- balance_df$TradDebtSec + balance_df$AvailSaleDebtSec + balance_df$HeldMatDebtSec\n# balance_df$NetLoans   <- balance_df$Loans + balance_df$LoanLossAllow\n# balance_df$TotDep     <- balance_df$NonIntBearDep + balance_df$IntBearDep\n# balance_df$TotLiab    <- balance_df$TotDep + balance_df$STBorrow + balance_df$DerivLiab + balance_df$AccExpOthLiab +\n#                          balance_df$LTDebt\n# balance_df$TotSHREq   <- balance_df$PrefStock + balance_df$ComStock + balance_df$AddlPaidCap + balance_df$RetEarn +\n#                          balance_df$AOCL + balance_df$TreasStock + balance_df$UnearnESOP + balance_df$NonCtrlInt\n# balance_df$TotAssets  <- balance_df$Cash + balance_df$IntEarnDep + balance_df$FedFundsSold + balance_df$TotDebtSec +\n#                          balance_df$LoansForSale + balance_df$NetLoans + balance_df$MortServRights + balance_df$PremEquip + \n#                          balance_df$Goodwill + balance_df$DerivAssets + balance_df$EquitySec + balance_df$OthAssets + \n# balance_df$TotLiabEq  <- balance_df$TotLiab + balance_df$TotSHREq\n#\n# balance_df: Input Variables (4)\n# Loans (Loans)\n# Allowance for Loan Losses (LoanLossAllow)\n# Noninterest Bearing Deposits (NonIntBearDep)\n# Interest Bearing Deposits (IntBearDep)\n#\n# balance_df: Drift Variables\n# Cash (Cash)\n# Interest Earning Deposits (IntEarnDep)\n# Federal Funds Sold (FedFundsSold)\n# Trading Debt Securities (TradDebtSec)\n# Available-for-Sale Debt Securities (AvailSaleDebtSec)\n# Held-to-Maturity Debt Securities (HeldMatDebtSec)\n# Loans Held for Sale (LoansForSale)\n# Mortgage Servicing Rights (MortServRights)\n# Premises and Equipment (PremEquip)\n# Goodwill\n# Derivative Assets (DerivAssets)\n# Equity Securities (EquitySec)\n# Other Assets (OthAssets)\n# Short-Term Borrowings (STBorrow)\n# Derivative Liabilities (DerivLiab)\n# Accrued Expenses and Other Liabilities (AccExpOthLiab)\n# Long-Term Debt (LTDebt)\n# Preferred Stock (PrefStock)\n# Common Stock (ComStock)\n# Additional Paid-In Capital (AddlPaidCap)\n# Retained Earnings (RetEarn)\n# Accumulated Other Comprehensive Loss (AOCL)\n# Treasury Stock (TreasStock)\n# Unearned ESOP Shares (UnearnESOP)\n# Noncontrolling Interests (NonCtrlInt)\n#\n#\n# income_df\n# \n# income_df: Calculated variables (10)\n# income_df$TotIntInc <- income_df$DebtSec + income_df$LoansSale + income_df$Loans + income_df$EqSec + income_df$OthIntInc\n# income_df$TotIntExp <- income_df$DepIntExp + income_df$STBIntExp + income_df$LTBIntExp + income_df$OthIntExp\n# income_df$NetIntInc <- income_df$TotIntInc - income_df$TotIntExp\n# income_df$TotnonIntInc <- income_df$DepLendFees + income_df$InvAdvFees + income_df$CommBrkFees + income_df$InvBankFees +\n#                           income_df$CardFees + income_df$MortBank + income_df$NetGainTrade + income_df$OthNonIntInc\n# income_df$TotRev <- income_df$NetIntInc + income_df$TotNonIntInc\n# income_df$TotNonIntExp <- income_df$Personnel + income_df$TechTelEquip + income_df$Occupancy + \n#                           income_df$OperLoss + income_df$ProfOutServ + \n#                           income_df$AdvPromo + income_df$OthNonIntExp\n# income_df$IncBefTax <- income_df$TotRev - income_df$TotNonIntExp - income_df$ProvCredLoss\n# income_df$NetIncBefNCI <- income_df$IncBefTax - income_df$TaxExp\n# income_df$WFNetInc <- income_df$NetIncBefNCI - income_df$NetIncLossNCI\n# income_df$WFNetIncCS <- income_df$WFNetInc - income_df$PrefStkDiv\n#\n#\n# income_df: Input Variables (6) ... directly impacted by external macroeconomic changes and focus in stress test scenarios\n# Loans (Loans):            Total amount of loans issued, sensitive to economic changes affecting credit demand and default rates.\n# Equity Securities (EqSec):Investments in equity securities, influenced by market valuations and economic conditions.\n# Other Interest Income (OthIntInc): Income generated from various miscellaneous financial sources, potentially sensitive to\n#                                    interest rate changes and economic conditions.\n# Provision for Credit Losses (ProvCredLoss): Reserves set aside to cover potential loan defaults, directly impacted by\n#                                             economic conditions and credit risk assessments.\n# Deposits Interest Expense (DepIntExp): Cost incurred from interest on deposits, which fluctuates with interest rate \n#                                        changes.\n# Mortgage Banking (MortBank): Income from mortgage-related activities, which can vary significantly with housing market\n#                              conditions and interest rates.\n#\n# income_df: Drift Variables\n# Debt Securities (DebtSec): Typically more stable investments unless significantly impacted by interest rate changes or \n#       credit quality adjustments.\n# Loans Held for Sale (LoansSale): Loans intended for sale in the near term, might not be directly impacted by long-term\n#       economic trends.\n# Short Term Borrowings Interest Expense (STBIntExp): Costs associated with short-term borrowings, which could have fixed\n#       rates or short adjustment periods.\n# Long Term Debt Interest Expense (LTBIntExp): Costs related to long-term borrowings, which may be fixed or less sensitive\n#       to immediate market fluctuations.\n# Other Interest Expense (OthIntExp): Miscellaneous interest expenses that may not directly correlate with macroeconomic\n# Deposit Lending Related Fees (DepLendFees): Fees associated with deposit accounts and lending services, relatively stable\n#       and less directly impacted by macro conditions.\n# Investment Advisory & Other Asset-Based Fees (InvAdvFees): Fees earned from managing client assets, depending on market\n#       conditions but also on contractual arrangements.\n# Commissions & Brokerage Services Fees (CommBrkFees): Fees from brokerage and trading services, \n#       somewhat dependent on market activity levels.\n# Investment Banking Fees (InvBankFees): Revenue from investment banking activities, which can fluctuate with \n#       market conditions but are also driven by deal flow.\n# Card Fees (CardFees): Fees associated with credit and debit card usage, generally stable unless consumer spending\n#       habits change significantly.\n# Net Gains from Trading Securities (NetGainTrade): Profits from trading activities, highly variable but also dependent \n#       on trading strategies and market conditions.\n# Other Noninterest Income (OthNonIntInc): Diverse sources of income not classified elsewhere, potentially variable \n#       but not directly linked to macroeconomic stressors.\n# Personnel (Personnel): Employee-related expenses, relatively fixed in the short term.\n# Technology, Telecommunications, and Equipment (TechTelEquip): Expenses related to technology and equipment, \n#       typically follow planned investment patterns.\n# Occupancy (Occupancy): Costs associated with physical premises, largely fixed.\n# Operating Losses (OperLoss): Losses from operational issues, not directly linked to economic conditions.\n# Professional and Outside Services (ProfOutServ): Costs for external services, can vary with business activity \n#       but not directly tied to economic stressors.\n# Advertising and Promotion (AdvPromo): Marketing and advertising costs, generally discretionary.\n# Other Noninterest Expense (OthNonIntExp): Miscellaneous expenses not categorized elsewhere\n# Income Tax Expense (TaxExp): Taxes on profits, varies with earnings but not directly impacted by most macroeconomic \n# Net Income Loss from Noncontrolling Interests (NetIncLossNCI): Earnings attributed to noncontrolling interests, \n#       varies based on subsidiary performance.\n# Preferred Stock Dividends and Other (PrefStkDiv): Dividends and similar payments to preferred shareholders, \n#       typically fixed based on issuance terms.\n#\n# *summary:*\n# balance_df\n# Total Variables: 36\n#   Calculated Variables: 7\n#   Input Variables: 4\n#   Drift Variables: 36 - 7 - 4 = 25\n# \n# income_df\n# Total Variables: 38\n#   Calculated Variables: 10\n#   Input Variables: 6\n#   Drift Variables: 38 - 10 - 6 = 22\n\n# Transpose dataframes\nbalance_df_t <- t(balance_df)\nbalance_df_t <- as.data.frame(balance_df_t)\nincome_df_t <- t(income_df)\nincome_df_t <- as.data.frame(income_df_t)\n\nprint(\"Balance Sheet Dataframe:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Balance Sheet Dataframe:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(balance_df_t)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    2022    2023\nCash               34596   33026\nIntEarnDep        124561  204193\nFedFundsSold       68036   80456\nTradDebtSec        86155   97302\nAvailSaleDebtSec  113594  130448\nHeldMatDebtSec    297059  262708\nTotDebtSec        496808  490458\nLoansForSale        7104    4936\nLoans             955871  936682\nLoanLossAllow     -12985  -14606\nNetLoans          942886  922076\nMortServRights     10480    8508\nPremEquip           8350    9266\nGoodwill           25173   25175\nDerivAssets        22774   18223\nEquitySec          64414   57336\nOthAssets          75838   78815\nNonIntBearDep     458010  360279\nIntBearDep        925975  997894\nTotDep           1383985 1358173\nSTBorrow           51145   89559\nDerivLiab          20067   18495\nAccExpOthLiab      68740   71210\nLTDebt            174870  207588\nTotLiab          1698807 1745025\nPrefStock          19448   19448\nComStock            9136    9136\nAddlPaidCap        60319   60555\nRetEarn           187968  201136\nAOCL              -13362  -11580\nTreasStock        -82853  -92960\nUnearnESOP          -429       0\nNonCtrlInt          1986    1708\nTotSHREq          182213  187443\nTotAssets        1881020 1932468\nTotLiabEq        1881020 1932468\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"Income Statement Dataframe:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Income Statement Dataframe:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(income_df_t)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               2021  2022  2023\nDebtSec        9253 11781 16108\nLoansSale       865   513   363\nLoans         28634 37715 57155\nEqSec           608   707   682\nOthIntInc       334  3308 10810\nTotIntInc     39694 54024 85118\nDepIntExp       388  2349 16503\nSTBIntExp       -41   582  3848\nLTBIntExp      3173  5505 11572\nOthIntExp       395   638   820\nTotIntExp      3915  9074 32743\nNetIntInc     35779 44950 52375\nDepLendFees    6920  6713  6140\nInvAdvFees    11011  9004  8670\nCommBrkFees    2299  2242  2375\nInvBankFees    2354  1439  1649\nCardFees       4175  4355  4256\nMortBank       4956  1383   829\nNetGainTrade   7264  1461  4368\nOthNonIntInc   4408  2821  1935\nTotNonIntInc  43387 29418 30222\nTotRev        79166 74368 82597\nProvCredLoss  -4155  1534  5399\nPersonnel     35541 34340 35829\nTechTelEquip   3227  3375  3920\nOccupancy      2968  2881  2884\nOperLoss       1568  6984  1183\nProfOutServ    5723  5188  5085\nAdvPromo        600   505   812\nOthNonIntExp   4131  3932  5849\nTotNonIntExp  53758 57205 55562\nIncBefTax     29563 15629 21636\nTaxExp         5764  2251  2607\nNetIncBefNCI  23799 13378 19029\nNetIncLossNCI  1690  -299  -113\nWFNetInc      22109 13677 19142\nPrefStkDiv     1291  1115  1160\nWFNetIncCS    20818 12562 17982\n```\n\n\n:::\n:::\n\n\n\n## second code block: stress tests and project forward one year\n\n-   Initialize coefficient matrices with hypothetical values.\n-   Defines stress scenario changes\n-   Calculate changes in the input variables based on the stress scenario.\n-   Update INPUT accounts; i.e., newBalancevalues and newIncomeValues\n-   Updates the balance_df and income_df dataframes; note the other values will be NA at the point.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(scales)\n\n# Define names for input and macro variables for clarity\nbalanceInputVarNames <- c(\"Loans\", \"LoanLossAllow\", \"NonIntBearDep\", \"IntBearDep\")\nincomeInputVarNames <- c(\"Loans\", \"EqSec\", \"OthIntInc\", \"ProvCredLoss\", \"DepIntExp\", \"MortBank\")\n\n# Define macro variable names\nmacroVarNames <- c(\"GDP Growth\", \"Unemployment Rate\", \"Interest Rates\", \"Housing Market\",\n                   \"Inflation Rate\", \"Stock Market\", \"Consumer Confidence\", \"Corporate Profits\")\n\n# Initialize the coefficient matrix with hypothetical values\nbalanceCoefficients <- matrix(runif(32, -0.1, 0.1), nrow = 4, ncol = 8, dimnames = list(balanceInputVarNames, macroVarNames))\nincomeCoefficients <- matrix(runif(48, -0.1, 0.1), nrow = 6, ncol = 8, dimnames = list(incomeInputVarNames, macroVarNames))  # 6 income inputs and 8 macro variables\n\n# Define stress scenario changes - assuming 1 set of changes for simplicity, which can be expanded\nstressScenarios <- matrix(c(-0.01, 0.02, -0.03, 0.01, -0.02, 0.03, 0.04, -0.01), ncol = 1, dimnames = list(macroVarNames, \"Change\"))\n\n# Extract the last row (2023 values) as the base for simulation\nbalanceInputs <- as.matrix(balance_df[nrow(balance_df), balanceInputVarNames])\nincomeInputs <- as.matrix(income_df[nrow(income_df), incomeInputVarNames])\n\n# Calculate changes for each matrix and transpose\nbalanceChangeMatrix <- balanceCoefficients %*% stressScenarios\nbalanceChangeMatrix_t <- t(balanceChangeMatrix)\nincomeChangeMatrix <- incomeCoefficients %*% stressScenarios\nincomeChangeMatrix_t <- t(incomeChangeMatrix)\n\n# Apply changes to the original values from the last rows of each dataframe\nnewBalanceValues <- balanceInputs * (1 + balanceChangeMatrix_t)\nnewIncomeValues <- incomeInputs * (1 + incomeChangeMatrix_t)\n\n# Update the dataframes with these new values for the next year's projection\nbalance_df[nrow(balance_df) + 1, balanceInputVarNames] <- t(newBalanceValues)\nincome_df[nrow(income_df) + 1, incomeInputVarNames] <- newIncomeValues\n\nformat_percent <- function(x) {\n  sprintf(\"%.2f%%\", x * 100)\n}\n\nformatted_balance_coefficients <- apply(balanceCoefficients, c(1, 2), format_percent)\nformatted_balance_coefficients_df <- as.data.frame(formatted_balance_coefficients)\n\nprint(\"Balance Coefficient Matrix:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Balance Coefficient Matrix:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(formatted_balance_coefficients_df, row.names = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              GDP Growth Unemployment Rate Interest Rates Housing Market\nLoans             -4.50%            -3.63%          0.01%         -8.80%\nLoanLossAllow     -9.79%            -6.25%          2.82%          9.47%\nNonIntBearDep     -2.09%            -2.64%         -6.26%         -0.57%\nIntBearDep         1.34%             6.05%          9.03%          3.94%\n              Inflation Rate Stock Market Consumer Confidence Corporate Profits\nLoans                  4.18%       -5.91%              -7.45%             5.74%\nLoanLossAllow          0.39%       -6.67%              -5.19%            -6.13%\nNonIntBearDep          1.79%       -6.58%              -7.28%             1.77%\nIntBearDep            -6.90%        5.21%               4.72%            -0.79%\n```\n\n\n:::\n\n```{.r .cell-code}\n# Format and print the income coefficient matrix\nformatted_income_coefficients <- apply(incomeCoefficients, c(1, 2), format_percent)\nformatted_income_coefficients_df <- as.data.frame(formatted_income_coefficients)\n\nprint(\"Income Coefficient Matrix:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Income Coefficient Matrix:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(formatted_income_coefficients_df, row.names = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             GDP Growth Unemployment Rate Interest Rates Housing Market\nLoans            -8.67%             0.95%         -5.45%         -1.90%\nEqSec            -2.96%            -3.91%          0.14%         -4.80%\nOthIntInc         1.00%             7.13%         -9.20%         -1.87%\nProvCredLoss      1.61%            -7.79%          0.56%         -4.82%\nDepIntExp        -1.55%             2.17%          1.98%         -7.60%\nMortBank         -1.55%            -6.64%         -0.93%          9.81%\n             Inflation Rate Stock Market Consumer Confidence Corporate Profits\nLoans                -5.08%        2.04%               0.52%            -2.60%\nEqSec                -2.52%       -2.69%               3.53%            -7.59%\nOthIntInc             9.07%        7.43%               2.41%             7.57%\nProvCredLoss         -8.03%        8.62%              -8.78%            -3.12%\nDepIntExp             0.06%        7.67%              -7.56%             7.91%\nMortBank             -7.21%       -4.91%              -2.40%            -7.85%\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"Stress Scenario Changes:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Stress Scenario Changes:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(stressScenarios)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    Change\nGDP Growth           -0.01\nUnemployment Rate     0.02\nInterest Rates       -0.03\nHousing Market        0.01\nInflation Rate       -0.02\nStock Market          0.03\nConsumer Confidence   0.04\nCorporate Profits    -0.01\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"Balance Change Matrix:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Balance Change Matrix:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(as.data.frame(apply(balanceChangeMatrix_t, 2, format_percent)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              apply(balanceChangeMatrix_t, 2, format_percent)\nLoans                                                  -0.73%\nLoanLossAllow                                          -0.37%\nNonIntBearDep                                          -0.39%\nIntBearDep                                              0.37%\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"Income Change Matrix:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Income Change Matrix:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(as.data.frame(apply(incomeChangeMatrix_t, 2, format_percent)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             apply(incomeChangeMatrix_t, 2, format_percent)\nLoans                                                 0.46%\nEqSec                                                 0.09%\nOthIntInc                                             0.45%\nProvCredLoss                                         -0.14%\nDepIntExp                                            -0.23%\nMortBank                                             -0.01%\n```\n\n\n:::\n\n```{.r .cell-code}\n# Let's just confirm with Loans\nloans_coefficients <- balanceCoefficients[\"Loans\", ]\nstress_scenario_values <- stressScenarios[, \"Change\"]\n\nintermediate_results_loans <- loans_coefficients * stress_scenario_values\ntotal_change_loans <- sum(intermediate_results_loans)\ntotal_change_loans_percentage <- total_change_loans * 100\n\nprint(paste(\"Total Change for Balance Sheet Loans (as percentage):\", sprintf(\"%.2f%%\", total_change_loans_percentage)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Total Change for Balance Sheet Loans (as percentage): -0.73%\"\n```\n\n\n:::\n:::\n\n\n\n## Third code block: apply drift rates \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Example drift rates for demonstration\n\nbalanceCalcVarNames <- c(\"TotDebtSec\", \"NetLoans\", \"TotDep\", \"TotLiab\", \"TotSHREq\", \"TotAssets\", \"TotLiabEq\")\nincomeCalcVarNames <- c(\"TotIntInc\", \"TotIntExp\", \"NetIntInc\", \"TotNonIntInc\", \"TotRev\", \n                        \"TotNonIntExp\", \"IncBefTax\",\"NetIncBefNCI\", \"WFNetInc\", \"WFNetIncCS\")\n\n# Define indices or names for drift variables and their rates\ndriftVarIndicesBalance <- setdiff(names(balance_df), c(balanceCalcVarNames, balanceInputVarNames))\ndriftVarIndicesIncome <- setdiff(names(income_df), c(incomeCalcVarNames, incomeInputVarNames))\n\n# Example drift rates for demonstration\n# vector of repeating value the length of driftVarIndicesBalance\ndriftRatesBalance <- rep(0.02, length(driftVarIndicesBalance))\ndriftRatesIncome <- rep(0.03, length(driftVarIndicesIncome))\n\n# Apply drift\nbalance_df[nrow(balance_df), driftVarIndicesBalance] <- balance_df[nrow(balance_df) - 1, driftVarIndicesBalance] * (1 + driftRatesBalance)\nincome_df[nrow(income_df), driftVarIndicesIncome] <- income_df[nrow(income_df) - 1, driftVarIndicesIncome] * (1 + driftRatesIncome)\n\n# Print the drift variables and their new values for balance_df\nprint(\"Balance Drift Variables and Their New Values:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Balance Drift Variables and Their New Values:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nfor (var in driftVarIndicesBalance) {\n  cat(sprintf(\"%s: %.2f -> %.2f\\n\", var, balance_df[nrow(balance_df) - 1, var], balance_df[nrow(balance_df), var]))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCash: 33026.00 -> 33686.52\nIntEarnDep: 204193.00 -> 208276.86\nFedFundsSold: 80456.00 -> 82065.12\nTradDebtSec: 97302.00 -> 99248.04\nAvailSaleDebtSec: 130448.00 -> 133056.96\nHeldMatDebtSec: 262708.00 -> 267962.16\nLoansForSale: 4936.00 -> 5034.72\nMortServRights: 8508.00 -> 8678.16\nPremEquip: 9266.00 -> 9451.32\nGoodwill: 25175.00 -> 25678.50\nDerivAssets: 18223.00 -> 18587.46\nEquitySec: 57336.00 -> 58482.72\nOthAssets: 78815.00 -> 80391.30\nSTBorrow: 89559.00 -> 91350.18\nDerivLiab: 18495.00 -> 18864.90\nAccExpOthLiab: 71210.00 -> 72634.20\nLTDebt: 207588.00 -> 211739.76\nPrefStock: 19448.00 -> 19836.96\nComStock: 9136.00 -> 9318.72\nAddlPaidCap: 60555.00 -> 61766.10\nRetEarn: 201136.00 -> 205158.72\nAOCL: -11580.00 -> -11811.60\nTreasStock: -92960.00 -> -94819.20\nUnearnESOP: 0.00 -> 0.00\nNonCtrlInt: 1708.00 -> 1742.16\n```\n\n\n:::\n\n```{.r .cell-code}\n# Print the drift variables and their new values for income_df\nprint(\"Income Drift Variables and Their New Values:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Income Drift Variables and Their New Values:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nfor (var in driftVarIndicesIncome) {\n  cat(sprintf(\"%s: %.2f -> %.2f\\n\", var, income_df[nrow(income_df) - 1, var], income_df[nrow(income_df), var]))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDebtSec: 16108.00 -> 16591.24\nLoansSale: 363.00 -> 373.89\nSTBIntExp: 3848.00 -> 3963.44\nLTBIntExp: 11572.00 -> 11919.16\nOthIntExp: 820.00 -> 844.60\nDepLendFees: 6140.00 -> 6324.20\nInvAdvFees: 8670.00 -> 8930.10\nCommBrkFees: 2375.00 -> 2446.25\nInvBankFees: 1649.00 -> 1698.47\nCardFees: 4256.00 -> 4383.68\nNetGainTrade: 4368.00 -> 4499.04\nOthNonIntInc: 1935.00 -> 1993.05\nPersonnel: 35829.00 -> 36903.87\nTechTelEquip: 3920.00 -> 4037.60\nOccupancy: 2884.00 -> 2970.52\nOperLoss: 1183.00 -> 1218.49\nProfOutServ: 5085.00 -> 5237.55\nAdvPromo: 812.00 -> 836.36\nOthNonIntExp: 5849.00 -> 6024.47\nTaxExp: 2607.00 -> 2685.21\nNetIncLossNCI: -113.00 -> -116.39\nPrefStkDiv: 1160.00 -> 1194.80\n```\n\n\n:::\n:::\n\n\n\n## Fourth code block: update calculated variables\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Update calculated variables directly in the latest row\nbalance_df[nrow(balance_df), \"TotDebtSec\"] <- sum(balance_df[nrow(balance_df), c(\"TradDebtSec\", \"AvailSaleDebtSec\", \"HeldMatDebtSec\")])\nbalance_df[nrow(balance_df), \"NetLoans\"] <- sum(balance_df[nrow(balance_df), c(\"Loans\", \"LoanLossAllow\")])\nbalance_df[nrow(balance_df), \"TotAssets\"] <- sum(balance_df[nrow(balance_df), c(\"Cash\", \"IntEarnDep\", \"FedFundsSold\", \"TotDebtSec\", \"LoansForSale\", \"NetLoans\", \"MortServRights\", \"PremEquip\", \"Goodwill\", \"DerivAssets\", \"EquitySec\", \"OthAssets\")])\nbalance_df[nrow(balance_df), \"TotDep\"] <- sum(balance_df[nrow(balance_df), c(\"NonIntBearDep\", \"IntBearDep\")])\nbalance_df[nrow(balance_df), \"TotLiab\"] <- sum(balance_df[nrow(balance_df), c(\"TotDep\", \"STBorrow\", \"DerivLiab\", \"AccExpOthLiab\", \"LTDebt\")])\n# balance_df[nrow(balance_df), \"TotSHREq\"] <- sum(balance_df[nrow(balance_df), c(\"PrefStock\", \"ComStock\", \"AddlPaidCap\",     #       \"RetEarn\", \"AOCL\", \"TreasStock\", \"UnearnESOP\", \"NonCtrlInt\")])\nbalance_df[nrow(balance_df), \"TotSHREq\"] <- balance_df[nrow(balance_df), \"TotAssets\"] -\n    balance_df[nrow(balance_df), \"TotLiab\"] \nbalance_df[nrow(balance_df), \"TotLiabEq\"] <- sum(balance_df[nrow(balance_df), c(\"TotLiab\", \"TotSHREq\")])\n\n# Update calculated variables directly in the latest row\nincome_df[nrow(income_df), \"TotIntInc\"] <- sum(income_df[nrow(income_df), c(\"DebtSec\", \"LoansSale\", \"Loans\", \"EqSec\", \"OthIntInc\")])\nincome_df[nrow(income_df), \"TotIntExp\"] <- sum(income_df[nrow(income_df), c(\"DepIntExp\", \"STBIntExp\", \"LTBIntExp\", \"OthIntExp\")])\nincome_df[nrow(income_df), \"NetIntInc\"] <- income_df[nrow(income_df), \"TotIntInc\"] - income_df[nrow(income_df), \"TotIntExp\"]\nincome_df[nrow(income_df), \"TotNonIntInc\"] <- sum(income_df[nrow(income_df), c(\"DepLendFees\", \"InvAdvFees\", \"CommBrkFees\", \"InvBankFees\", \"CardFees\", \"MortBank\", \"NetGainTrade\", \"OthNonIntInc\")])\nincome_df[nrow(income_df), \"TotRev\"] <- income_df[nrow(income_df), \"NetIntInc\"] + income_df[nrow(income_df), \"TotNonIntInc\"]\nincome_df[nrow(income_df), \"TotNonIntExp\"] <- sum(income_df[nrow(income_df), c(\"Personnel\", \"TechTelEquip\", \"Occupancy\", \"OperLoss\", \"ProfOutServ\", \"AdvPromo\", \"OthNonIntExp\")])\nincome_df[nrow(income_df), \"IncBefTax\"] <- income_df[nrow(income_df), \"TotRev\"] - income_df[nrow(income_df), \"TotNonIntExp\"] - income_df[nrow(income_df), \"ProvCredLoss\"]\nincome_df[nrow(income_df), \"NetIncBefNCI\"] <- income_df[nrow(income_df), \"IncBefTax\"] - income_df[nrow(income_df), \"TaxExp\"]\nincome_df[nrow(income_df), \"WFNetInc\"] <- income_df[nrow(income_df), \"NetIncBefNCI\"] - income_df[nrow(income_df), \"NetIncLossNCI\"]\nincome_df[nrow(income_df), \"WFNetIncCS\"] <- income_df[nrow(income_df), \"WFNetInc\"] - income_df[nrow(income_df), \"PrefStkDiv\"]\n\nrownames(balance_df)[nrow(balance_df)] <- \"2024\"\nrownames(income_df)[nrow(income_df)] <- \"2024\"\n\n# Print the updated dataframes\nbalance_df_t <- t(balance_df)\nbalance_df_t <- as.data.frame(balance_df_t)\nincome_df_t <- t(income_df)\nincome_df_t <- as.data.frame(income_df_t)\n\nprint(\"Balance Sheet Dataframe:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Balance Sheet Dataframe:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(balance_df_t)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    2022    2023       2024\nCash               34596   33026   33686.52\nIntEarnDep        124561  204193  208276.86\nFedFundsSold       68036   80456   82065.12\nTradDebtSec        86155   97302   99248.04\nAvailSaleDebtSec  113594  130448  133056.96\nHeldMatDebtSec    297059  262708  267962.16\nTotDebtSec        496808  490458  500267.16\nLoansForSale        7104    4936    5034.72\nLoans             955871  936682  929824.60\nLoanLossAllow     -12985  -14606  -14551.79\nNetLoans          942886  922076  915272.81\nMortServRights     10480    8508    8678.16\nPremEquip           8350    9266    9451.32\nGoodwill           25173   25175   25678.50\nDerivAssets        22774   18223   18587.46\nEquitySec          64414   57336   58482.72\nOthAssets          75838   78815   80391.30\nNonIntBearDep     458010  360279  358867.09\nIntBearDep        925975  997894 1001554.46\nTotDep           1383985 1358173 1360421.55\nSTBorrow           51145   89559   91350.18\nDerivLiab          20067   18495   18864.90\nAccExpOthLiab      68740   71210   72634.20\nLTDebt            174870  207588  211739.76\nTotLiab          1698807 1745025 1755010.59\nPrefStock          19448   19448   19836.96\nComStock            9136    9136    9318.72\nAddlPaidCap        60319   60555   61766.10\nRetEarn           187968  201136  205158.72\nAOCL              -13362  -11580  -11811.60\nTreasStock        -82853  -92960  -94819.20\nUnearnESOP          -429       0       0.00\nNonCtrlInt          1986    1708    1742.16\nTotSHREq          182213  187443  190862.06\nTotAssets        1881020 1932468 1945872.65\nTotLiabEq        1881020 1932468 1945872.65\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"Income Statement Dataframe:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Income Statement Dataframe:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(income_df_t)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               2021  2022  2023       2024\nDebtSec        9253 11781 16108 16591.2400\nLoansSale       865   513   363   373.8900\nLoans         28634 37715 57155 57417.6914\nEqSec           608   707   682   682.5871\nOthIntInc       334  3308 10810 10858.8812\nTotIntInc     39694 54024 85118 85924.2898\nDepIntExp       388  2349 16503 16465.1178\nSTBIntExp       -41   582  3848  3963.4400\nLTBIntExp      3173  5505 11572 11919.1600\nOthIntExp       395   638   820   844.6000\nTotIntExp      3915  9074 32743 33192.3178\nNetIntInc     35779 44950 52375 52731.9719\nDepLendFees    6920  6713  6140  6324.2000\nInvAdvFees    11011  9004  8670  8930.1000\nCommBrkFees    2299  2242  2375  2446.2500\nInvBankFees    2354  1439  1649  1698.4700\nCardFees       4175  4355  4256  4383.6800\nMortBank       4956  1383   829   828.9018\nNetGainTrade   7264  1461  4368  4499.0400\nOthNonIntInc   4408  2821  1935  1993.0500\nTotNonIntInc  43387 29418 30222 31103.6918\nTotRev        79166 74368 82597 83835.6638\nProvCredLoss  -4155  1534  5399  5391.5623\nPersonnel     35541 34340 35829 36903.8700\nTechTelEquip   3227  3375  3920  4037.6000\nOccupancy      2968  2881  2884  2970.5200\nOperLoss       1568  6984  1183  1218.4900\nProfOutServ    5723  5188  5085  5237.5500\nAdvPromo        600   505   812   836.3600\nOthNonIntExp   4131  3932  5849  6024.4700\nTotNonIntExp  53758 57205 55562 57228.8600\nIncBefTax     29563 15629 21636 21215.2415\nTaxExp         5764  2251  2607  2685.2100\nNetIncBefNCI  23799 13378 19029 18530.0315\nNetIncLossNCI  1690  -299  -113  -116.3900\nWFNetInc      22109 13677 19142 18646.4215\nPrefStkDiv     1291  1115  1160  1194.8000\nWFNetIncCS    20818 12562 17982 17451.6215\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}