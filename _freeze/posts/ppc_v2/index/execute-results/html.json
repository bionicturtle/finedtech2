{
  "hash": "a0f611a37a1df7090f3eec535e79fd85",
  "result": {
    "markdown": "---\ntitle: Applying my PPC data model\ndescription: Visualizing correlation and mapping CMLs\nauthor: David Harper, CFA, FRM\ndate: 2023-11-26\ncategories: [code, analysis]\nexecute: \n  echo: true\n  warning: false\n---\n\n\nContents\n\n-   Define the potential portfolios (= sets of assets)\n-   Retrieve returns for each periodicity; aka, frequency\n-   Add analysis list-column: volatility, avg return, correlation matrix\n-   Correlation\n    -   Single stocks are better diversifiers\n    -   Visualize correlation\n-   Simulation\n    -   Select the portfolio (set)\n    -   Bias the random weights\n    -   Setup the simulation; i.e., functions\n    -   Run the simulation\n-   Visualize\n    -   Add a second CML\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse); library(patchwork); library (ggcorrplot); library(gt)\nlibrary(tidyquant)\nlibrary(MASS) # write.matrix\n# library(dplyr); library(tidyr); library(purrr)\n# library(ggplot)\n```\n:::\n\n\n## Define the potential portfolios (= sets of assets)\n\nThe container in this approach is **stock_sets**, a dataframe we initialize (as our TOC) with three columns:\n\n-   set_id\n-   description\n-   symbols: a list of tickers\n\nEach row of the **stock_sets** dataframe hold an entire portfolio including these identifiers plus the returns (via **nested_data**), and the **analysis**. The latter two are added as *list-columns* which are versatile objects: list-items can include dataframes, vectors, and even other lists.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First row of stock_sets is (portfolio of) sector ETFs:\nsector_11etf_list <- c(\"XLK\",  # Technology\n                       \"XLV\",  # Health Care\n                       \"XLF\",  # Financials\n                       \"XLY\",  # Consumer Discretionary\n                       \"XLP\",  # Consumer Staples\n                       \"XLE\",  # Energy\n                       \"XLU\",  # Utilities\n                       \"XLI\",  # Industrials\n                       \"XLB\",  # Materials\n                       \"XLRE\", # Real Estate\n                       \"XLC\") # Communication Services\n\n# Second row of stock_sets is (portfolio of) style ETFs:\nsize_style_etfs <- c(\"IWF\",  # Large-Cap Growth\n                     \"IWD\",  # Large-Cap Value\n                     \"SPY\",  # Large-Cap Blend\n                     \"IWP\",  # Mid-Cap Growth\n                     \"IWS\",  # Mid-Cap Value\n                     \"MDY\",  # Mid-Cap Blend\n                     \"IWO\",  # Small-Cap Growth\n                     \"IWN\",  # Small-Cap Value\n                     \"IWM\")  # Small-Cap Blend\n\n# Third row is largest (by market cap) company in each sector:\nlarge_mid_caps <- read_csv(\"large_mid_caps.csv\")\nlarge_mid_caps <- large_mid_caps |> rename_at('Market Cap', ~ 'Capitalization')\nlarge_mid_caps$Industry <- as_factor(large_mid_caps$Industry)\nlarge_mid_caps$Sector <- as_factor(large_mid_caps$Sector)\n\n# select the largest (by Market Cap) in each Industry\ntop_in_sector <- large_mid_caps |> \n    group_by(Sector) |> \n    arrange(desc(Capitalization)) |> \n    slice(1)\nremove_rows <- c(7, 8, 15, 17)\ntop_in_sector <- top_in_sector[-remove_rows,]\n\n# This is the essential stock_sets dataframe\nstock_sets <- tibble(\n    set_id = c(\"11_sectors\",\n               \"9_styles\",\n               \"13_top_in_sector\"),\n    \n    description = c(\"All 11 Sectors\",\n                    \"All 9 Styles\",\n                    \"Top Market Cap in each of 13 Sectors\"), \n    \n    # this is a list column, see https://adv-r.hadley.nz/vectors-chap.html#list-columns \n    symbols = list(sector_11etf_list, size_style_etfs, top_in_sector$Ticker)\n    )\n\ndate_start <- \"2013-01-01\"\ndate_end   <- \"2023-11-17\"\n```\n:::\n\n\n## Retrieve returns for each frequency; aka, periodicity\n\nEach portfolio is a set of tickers/symbols. For *each* of the portfolio's symbols (aka, tickers), the **get_returns** function retrieves log returns into three dataframes; one for each frequency:\n\n-   daily\n-   weekly\n-   monthly\n\nWe will call the **get_returns** function via map (purrr is one of my favorite packagse!) to create a new list column called **nested_data**. Each row of nested_data *will contain a list* of three dataframes, one for each period. These dataframes will contain the log returns for each ticker in the set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This will add the nested_data list-column. For example, we\n# can use stock_sets$nested_data[[n]]$daily$daily.returns to\n# retrieve daily.returns for the nth portfolio\n\nget_returns <- function(symbols, start_date, end_date) {\n    mult_stocks <- tq_get(symbols, get = \"stock.prices\", \n                          from = start_date, to = end_date)\n    periods <- c(\"daily\", \"weekly\", \"monthly\")\n    returns_list <- lapply(periods, function(period) {\n        mult_stocks |> \n            group_by(symbol) |> \n            tq_transmute(select = adjusted,\n                         mutate_fun = periodReturn, \n                         period = period, \n                         type = \"log\")\n    })\n    \n    names(returns_list) <- periods\n    return(returns_list)\n}\n\n# Nest return data for each stock set\nstock_sets <- stock_sets |> \n    mutate(nested_data = map(symbols, \n                             ~ get_returns(.x, date_start, date_end)))\n\nprint(stock_sets)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 4\n  set_id           description                          symbols    nested_data \n  <chr>            <chr>                                <list>     <list>      \n1 11_sectors       All 11 Sectors                       <chr [11]> <named list>\n2 9_styles         All 9 Styles                         <chr [9]>  <named list>\n3 13_top_in_sector Top Market Cap in each of 13 Sectors <chr [13]> <named list>\n```\n:::\n:::\n\n\n## Add analysis list-column: volatility, avg return, correlation matrix\n\nFor each portfolio (set of tickers) and periodicity, the **analysis** list column generates:\n\n-   vector of volatilities\n-   vector of average returns\n-   correlation matrix (diagonal is 1)\n-   average correlation (as a *rough* measure of diversification)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# For example, we can use stock_sets$analysis[[1]]$monthly$corr_matrix\n# to retrieve the correlation matrix for the nth portfolio\n\nperform_analysis <- function(data, frequency) {\n    # Determine the column name for returns based on the frequency\n    returns_col <- switch(frequency,\n                          \"daily\" = \"daily.returns\",\n                          \"weekly\" = \"weekly.returns\",\n                          \"monthly\" = \"monthly.returns\",\n                          stop(\"Invalid frequency\"))\n\n    # Calculate volatilities\n    volatilities <- data |> \n        group_by(symbol) |> \n        summarise(volatility = sd(.data[[returns_col]], na.rm = TRUE)) |> \n        ungroup()\n\n    # Calculate average returns\n    avg_returns <- data |> \n        group_by(symbol) |> \n        summarise(avg_return = mean(.data[[returns_col]], na.rm = TRUE)) |> \n        ungroup()\n\n    # Pivot to wide format for correlation matrix calculation\n    data_wide <- data |> \n        group_by(date) |> \n        pivot_wider(names_from = symbol, values_from = .data[[returns_col]])\n    \n    # Write files to verify (in Excel) the correlation matrix\n    # write.csv(data_wide, paste0(\"data_wide_\", frequency, \".csv\"), row.names = FALSE)\n\n    # Calculate the correlation matrix\n    corr_matrix <- cor(data_wide[ ,-1], use = \"complete.obs\")\n\n    # write.csv(as.data.frame(corr_matrix), paste0(\"corr_matrix_\", frequency, \".csv\"), row.names = TRUE) \n    \n    # Calculate average correlation\n    avg_corr <- mean(corr_matrix[lower.tri(corr_matrix)])\n\n    return(list(volatilities = volatilities, \n                avg_returns = avg_returns, \n                corr_matrix = corr_matrix, \n                avg_corr = avg_corr))\n}\n\n# Applying the perform_analysis function to the stock_sets\nstock_sets <- stock_sets |> \n    mutate(analysis = map(nested_data, ~ {\n        list(\n            daily = perform_analysis(.x$daily, \"daily\"),\n            weekly = perform_analysis(.x$weekly, \"weekly\"),\n            monthly = perform_analysis(.x$monthly, \"monthly\")\n        )\n    }))\n\n# Examine data structure \nprint(stock_sets)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 5\n  set_id           description                 symbols nested_data  analysis    \n  <chr>            <chr>                       <list>  <list>       <list>      \n1 11_sectors       All 11 Sectors              <chr>   <named list> <named list>\n2 9_styles         All 9 Styles                <chr>   <named list> <named list>\n3 13_top_in_sector Top Market Cap in each of … <chr>   <named list> <named list>\n```\n:::\n\n```{.r .cell-code}\nglimpse(stock_sets)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 3\nColumns: 5\n$ set_id      <chr> \"11_sectors\", \"9_styles\", \"13_top_in_sector\"\n$ description <chr> \"All 11 Sectors\", \"All 9 Styles\", \"Top Market Cap in each …\n$ symbols     <list> <\"XLK\", \"XLV\", \"XLF\", \"XLY\", \"XLP\", \"XLE\", \"XLU\", \"XLI\", \"…\n$ nested_data <list> [[<grouped_df[28057 x 3]>], [<grouped_df[5819 x 3]>], [<g…\n$ analysis    <list> [[[<tbl_df[11 x 2]>], [<tbl_df[11 x 2]>], <<matrix[11 x 1…\n```\n:::\n:::\n\n\n## Correlation\n\n### Average average correlation\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# GPT4 basically wrote this entire chunk: I added it while writing substack\n# Prepare a dataframe for the average correlations\navg_corr_data <- tibble(\n    Portfolio = character(),\n    Frequency = character(),\n    Average_Correlation = numeric()\n)\n\n# Loop through each portfolio and each frequency\nfor (i in seq_along(stock_sets$analysis)) {\n    portfolio_id <- stock_sets$set_id[i]\n    for (freq in c(\"daily\", \"weekly\", \"monthly\")) {\n        avg_corr <- stock_sets$analysis[[i]][[freq]]$avg_corr\n        avg_corr_data <- avg_corr_data |> \n            add_row(\n                Portfolio = portfolio_id,\n                Frequency = freq,\n                Average_Correlation = avg_corr\n            )\n    }\n}\n\n# Create a wider table format\navg_corr_wide <- avg_corr_data |> \n    pivot_wider(\n        names_from = Frequency,\n        values_from = Average_Correlation,\n        names_prefix = \"Avg_Corr_\"\n    )\n\n# Add a column for the overall average correlation\navg_corr_wide <- avg_corr_wide |> \n    rowwise() |> \n    mutate(Avg_Corr_Total = mean(c_across(starts_with(\"Avg_Corr_\")), na.rm = TRUE)) |> \n    ungroup()\n\navg_corr_wide |> \n    gt() |> \n    tab_header(title = \"Average Correlation per Frequency\") |> \n    cols_label(\n        Portfolio = \"Portfolio\",\n        Avg_Corr_daily = \"Daily\",\n        Avg_Corr_weekly = \"Weekly\",\n        Avg_Corr_monthly = \"Monthly\",\n        Avg_Corr_Total = \"Avg Avg Corr\"\n    ) |> \n    fmt_number(columns = 2:5, decimals = 3)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"fhfxlstfep\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#fhfxlstfep table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#fhfxlstfep thead, #fhfxlstfep tbody, #fhfxlstfep tfoot, #fhfxlstfep tr, #fhfxlstfep td, #fhfxlstfep th {\n  border-style: none;\n}\n\n#fhfxlstfep p {\n  margin: 0;\n  padding: 0;\n}\n\n#fhfxlstfep .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#fhfxlstfep .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#fhfxlstfep .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#fhfxlstfep .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#fhfxlstfep .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#fhfxlstfep .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fhfxlstfep .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#fhfxlstfep .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#fhfxlstfep .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#fhfxlstfep .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#fhfxlstfep .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#fhfxlstfep .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#fhfxlstfep .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#fhfxlstfep .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#fhfxlstfep .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#fhfxlstfep .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#fhfxlstfep .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#fhfxlstfep .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#fhfxlstfep .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fhfxlstfep .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#fhfxlstfep .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#fhfxlstfep .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#fhfxlstfep .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fhfxlstfep .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#fhfxlstfep .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#fhfxlstfep .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fhfxlstfep .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fhfxlstfep .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#fhfxlstfep .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fhfxlstfep .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#fhfxlstfep .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fhfxlstfep .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#fhfxlstfep .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fhfxlstfep .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#fhfxlstfep .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fhfxlstfep .gt_left {\n  text-align: left;\n}\n\n#fhfxlstfep .gt_center {\n  text-align: center;\n}\n\n#fhfxlstfep .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#fhfxlstfep .gt_font_normal {\n  font-weight: normal;\n}\n\n#fhfxlstfep .gt_font_bold {\n  font-weight: bold;\n}\n\n#fhfxlstfep .gt_font_italic {\n  font-style: italic;\n}\n\n#fhfxlstfep .gt_super {\n  font-size: 65%;\n}\n\n#fhfxlstfep .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#fhfxlstfep .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#fhfxlstfep .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#fhfxlstfep .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#fhfxlstfep .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#fhfxlstfep .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#fhfxlstfep .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"5\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Average Correlation per Frequency</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Portfolio\">Portfolio</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Daily\">Daily</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Weekly\">Weekly</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Monthly\">Monthly</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Avg Avg Corr\">Avg Avg Corr</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Portfolio\" class=\"gt_row gt_left\">11_sectors</td>\n<td headers=\"Avg_Corr_daily\" class=\"gt_row gt_right\">0.676</td>\n<td headers=\"Avg_Corr_weekly\" class=\"gt_row gt_right\">0.682</td>\n<td headers=\"Avg_Corr_monthly\" class=\"gt_row gt_right\">0.677</td>\n<td headers=\"Avg_Corr_Total\" class=\"gt_row gt_right\">0.678</td></tr>\n    <tr><td headers=\"Portfolio\" class=\"gt_row gt_left\">9_styles</td>\n<td headers=\"Avg_Corr_daily\" class=\"gt_row gt_right\">0.899</td>\n<td headers=\"Avg_Corr_weekly\" class=\"gt_row gt_right\">0.902</td>\n<td headers=\"Avg_Corr_monthly\" class=\"gt_row gt_right\">0.899</td>\n<td headers=\"Avg_Corr_Total\" class=\"gt_row gt_right\">0.900</td></tr>\n    <tr><td headers=\"Portfolio\" class=\"gt_row gt_left\">13_top_in_sector</td>\n<td headers=\"Avg_Corr_daily\" class=\"gt_row gt_right\">0.371</td>\n<td headers=\"Avg_Corr_weekly\" class=\"gt_row gt_right\">0.344</td>\n<td headers=\"Avg_Corr_monthly\" class=\"gt_row gt_right\">0.325</td>\n<td headers=\"Avg_Corr_Total\" class=\"gt_row gt_right\">0.346</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n### Single stocks are better diversifiers\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncreate_avg_corr_table <- function(monthly_data, title = \"Data Analysis\") {\n    corr_matrix <- monthly_data$corr_matrix\n    symbols <- rownames(corr_matrix)\n    \n    # average correlation for each stock excluding the stock itself\n    avg_correlations_per_stock <- map_dbl(seq_len(nrow(corr_matrix)), function(i) {\n        row_correlations <- corr_matrix[i, ]\n        mean(row_correlations[-i], na.rm = TRUE)\n    })\n    avg_correlations_df <- data.frame(symbol = symbols, \n                                      avg_correlation = avg_correlations_per_stock)\n    combined_data <- left_join(monthly_data$volatilities,\n                               monthly_data$avg_returns, by = \"symbol\") |>\n        left_join(avg_correlations_df, by = \"symbol\")\n\n    gt_table <- combined_data |> \n        gt() |> \n        tab_header(title = title) |> \n        cols_label(\n            symbol = \"Symbol\",\n            volatility = \"Volatility\",\n            avg_return = \"Avg Return\",\n            avg_correlation = \"Correlation(*)\"\n        ) |> \n        fmt_percent(columns = 2:3, decimals = 2) |>\n        fmt_number(columns = 4, decimals = 2) |> \n        tab_footnote(\"(*) Pairwise average(ρ): matrix row/column average excluding diagonal\")\n\n    return(gt_table)\n}\n\nmonthly_data <- stock_sets$analysis[[1]]$monthly\ncreate_avg_corr_table(monthly_data, \"Sectors, Monthly Returns\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"iqjuyajnhd\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#iqjuyajnhd table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#iqjuyajnhd thead, #iqjuyajnhd tbody, #iqjuyajnhd tfoot, #iqjuyajnhd tr, #iqjuyajnhd td, #iqjuyajnhd th {\n  border-style: none;\n}\n\n#iqjuyajnhd p {\n  margin: 0;\n  padding: 0;\n}\n\n#iqjuyajnhd .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#iqjuyajnhd .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#iqjuyajnhd .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#iqjuyajnhd .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#iqjuyajnhd .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#iqjuyajnhd .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#iqjuyajnhd .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#iqjuyajnhd .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#iqjuyajnhd .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#iqjuyajnhd .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#iqjuyajnhd .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#iqjuyajnhd .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#iqjuyajnhd .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#iqjuyajnhd .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#iqjuyajnhd .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#iqjuyajnhd .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#iqjuyajnhd .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#iqjuyajnhd .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#iqjuyajnhd .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iqjuyajnhd .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#iqjuyajnhd .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#iqjuyajnhd .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#iqjuyajnhd .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iqjuyajnhd .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#iqjuyajnhd .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#iqjuyajnhd .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#iqjuyajnhd .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iqjuyajnhd .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#iqjuyajnhd .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#iqjuyajnhd .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#iqjuyajnhd .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#iqjuyajnhd .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#iqjuyajnhd .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iqjuyajnhd .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#iqjuyajnhd .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iqjuyajnhd .gt_left {\n  text-align: left;\n}\n\n#iqjuyajnhd .gt_center {\n  text-align: center;\n}\n\n#iqjuyajnhd .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#iqjuyajnhd .gt_font_normal {\n  font-weight: normal;\n}\n\n#iqjuyajnhd .gt_font_bold {\n  font-weight: bold;\n}\n\n#iqjuyajnhd .gt_font_italic {\n  font-style: italic;\n}\n\n#iqjuyajnhd .gt_super {\n  font-size: 65%;\n}\n\n#iqjuyajnhd .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#iqjuyajnhd .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#iqjuyajnhd .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#iqjuyajnhd .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#iqjuyajnhd .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#iqjuyajnhd .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#iqjuyajnhd .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"4\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Sectors, Monthly Returns</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Symbol\">Symbol</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Volatility\">Volatility</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Avg Return\">Avg Return</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Correlation(*)\">Correlation(*)</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">XLB</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">5.30%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">0.73%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.76</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">XLC</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">6.09%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">0.58%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.69</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">XLE</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">8.35%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">0.40%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.54</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">XLF</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">5.44%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">0.87%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.72</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">XLI</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">5.12%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">0.91%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.77</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">XLK</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">5.17%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">1.50%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.69</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">XLP</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">3.64%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">0.72%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.66</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">XLRE</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">5.01%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">0.46%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.71</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">XLU</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">4.35%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">0.70%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.55</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">XLV</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">3.99%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">1.01%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.66</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">XLY</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">5.42%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">1.04%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.71</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"4\"> (*) Pairwise average(ρ): matrix row/column average excluding diagonal</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n\n```{.r .cell-code}\nmonthly_data <- stock_sets$analysis[[3]]$monthly\ncreate_avg_corr_table(monthly_data, \"Largest Stock in Sector, Monthly Returns\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"udmmoltgww\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#udmmoltgww table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#udmmoltgww thead, #udmmoltgww tbody, #udmmoltgww tfoot, #udmmoltgww tr, #udmmoltgww td, #udmmoltgww th {\n  border-style: none;\n}\n\n#udmmoltgww p {\n  margin: 0;\n  padding: 0;\n}\n\n#udmmoltgww .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#udmmoltgww .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#udmmoltgww .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#udmmoltgww .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#udmmoltgww .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#udmmoltgww .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#udmmoltgww .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#udmmoltgww .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#udmmoltgww .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#udmmoltgww .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#udmmoltgww .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#udmmoltgww .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#udmmoltgww .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#udmmoltgww .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#udmmoltgww .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#udmmoltgww .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#udmmoltgww .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#udmmoltgww .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#udmmoltgww .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#udmmoltgww .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#udmmoltgww .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#udmmoltgww .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#udmmoltgww .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#udmmoltgww .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#udmmoltgww .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#udmmoltgww .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#udmmoltgww .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#udmmoltgww .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#udmmoltgww .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#udmmoltgww .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#udmmoltgww .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#udmmoltgww .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#udmmoltgww .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#udmmoltgww .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#udmmoltgww .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#udmmoltgww .gt_left {\n  text-align: left;\n}\n\n#udmmoltgww .gt_center {\n  text-align: center;\n}\n\n#udmmoltgww .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#udmmoltgww .gt_font_normal {\n  font-weight: normal;\n}\n\n#udmmoltgww .gt_font_bold {\n  font-weight: bold;\n}\n\n#udmmoltgww .gt_font_italic {\n  font-style: italic;\n}\n\n#udmmoltgww .gt_super {\n  font-size: 65%;\n}\n\n#udmmoltgww .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#udmmoltgww .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#udmmoltgww .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#udmmoltgww .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#udmmoltgww .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#udmmoltgww .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#udmmoltgww .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"4\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Largest Stock in Sector, Monthly Returns</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Symbol\">Symbol</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Volatility\">Volatility</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Avg Return\">Avg Return</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Correlation(*)\">Correlation(*)</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">AAPL</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">8.06%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">1.85%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.35</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">AMZN</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">8.68%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">1.84%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.29</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">BRK-B</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">4.81%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">1.03%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.44</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">CMCSA</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">6.50%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">0.77%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.38</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">LIN</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">5.21%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">1.15%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.42</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">LLY</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">6.47%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">2.08%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.11</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">LVMUY</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">6.92%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">1.31%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.38</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">NEE</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">5.59%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">1.11%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.21</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">NHYDY</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">10.39%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">0.40%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.32</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">PLD</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">6.40%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">1.07%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.37</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">UNP</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">6.33%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">1.12%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.39</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">WMT</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">5.14%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">0.80%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.27</td></tr>\n    <tr><td headers=\"symbol\" class=\"gt_row gt_left\">XOM</td>\n<td headers=\"volatility\" class=\"gt_row gt_right\">7.52%</td>\n<td headers=\"avg_return\" class=\"gt_row gt_right\">0.46%</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.28</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"4\"> (*) Pairwise average(ρ): matrix row/column average excluding diagonal</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n\n\n### Visualize Correlation\n\nThese step took me too long because I couldn't wrestle corrplot/ggcorrplot to my ends. I tried various packages but finally settled on [the corrr package](https://corrr.tidymodels.org/index.html) due to its elegant/tidy construction; e.g., if you use ggplot, you can guess its parameters. As [the authors write](https://corrr.tidymodels.org/articles/using-corrr.html),\n\n> At first, a correlation data frame might seem like an unnecessary complexity compared to the traditional matrix. However, the purpose of corrr is to help use explore these correlations, not to do mathematical or statistical operations. Thus, by having the correlations in a data frame, we can make use of packages that help us work with data frames like dplyr, tidyr, ggplot2, and focus on using data pipelines\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(corrr)\n\ncolors_corr_plot <- colorRampPalette(c(\"firebrick3\", \"firebrick1\", \"yellow\", \"seagreen1\", \"seagreen4\"))\n\nplot_corr <- function(matrix, title) {\n    matrix_df <- as_cordf(matrix) |> shave()\n    matrix_df |> rplot(shape = 15, print_cor = TRUE,\n                       colors = colors_corr_plot(5),\n                       legend = FALSE) +\n        theme(axis.text.x = element_text(angle = 90, hjust = 1))\n}\n    \nget_corr_matrices <- function(row_df){\n    analyze_this <- row_df |> \n        pull(analysis)\n\n    corr_daily_matrix   <- analyze_this[[1]][[\"daily\"]]$corr_matrix\n    corr_weekly_matrix  <- analyze_this[[1]][[\"weekly\"]]$corr_matrix\n    corr_monthly_matrix <- analyze_this[[1]][[\"monthly\"]]$corr_matrix\n    \n    return(list(\n        corr_daily_matrix = corr_daily_matrix,\n        corr_weekly_matrix = corr_weekly_matrix,\n        corr_monthly_matrix = corr_monthly_matrix\n    ))\n}\n\nselect_row_1 <- stock_sets |> filter(set_id == \"9_styles\")\nthree_matrices <- get_corr_matrices(select_row_1)\ncp1 <- three_matrices$corr_daily_matrix |> plot_corr(\"9_styles, daily\")\n# cp2 <- three_matrices$corr_weekly_matrix |> plot_corr(\"9_styles, weekly\")\ncp3 <- three_matrices$corr_monthly_matrix |> plot_corr(\"9_styles, monthly\")\n\nselect_row_2 <- stock_sets |> filter(set_id == \"11_sectors\")\nthree_matrices <- get_corr_matrices(select_row_2)\ncp4 <- three_matrices$corr_daily_matrix |> plot_corr(\"11_sectors, daily\") + \n    theme(legend.position = \"right\")\n# cp5 <- three_matrices$corr_weekly_matrix |> plot_corr(\"11_sectors, weekly\")\ncp6 <- three_matrices$corr_monthly_matrix |> plot_corr(\"11_sectors, monthly\") + \n    theme(legend.position = \"right\")\n    \nselect_row_3 <- stock_sets |> filter(set_id == \"13_top_in_sector\")\nthree_matrices <- get_corr_matrices(select_row_3)\ncp7 <- three_matrices$corr_daily_matrix |> plot_corr(\"13_top_in_sector, daily\")\n# cp8 <- three_matrices$corr_weekly_matrix |> plot_corr(\"13_top_in_sector, weekly\")\ncp9 <- three_matrices$corr_monthly_matrix |> plot_corr(\"13_top_in_sector, monthly\")\n\ncp1 + cp4 + plot_annotation(\"Daily frequency: Styles vs Sectors\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncp3 + cp6 + plot_annotation(\"Monthly frequency: Styles vs Sectors\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n```{.r .cell-code}\ncp7 + cp9 + plot_annotation(\"Largest Stock in Each Sector: Daily vs Monthly\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n:::\n\n\n## Simulation\n\nThere are four steps here: select the portfolio, bias the random weights (if desired), setup the simulation, and run the simulation.\n\n### Simulation: 1. Select the portfolio (set of tickers/symbols)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Selecting the desired set (e.g., \"Set 1\")\n\nselect_set <- stock_sets |> \n    filter(set_id == \"11_sectors\") |> \n    pull(\"analysis\")\n\nanalyze_set <- select_set[[1]]\nanalyze_period <- analyze_set$monthly\n\n# Extracting components from the selected set\nexp_returns_period <- analyze_period$avg_returns$avg_return\nnames(exp_returns_period) <- analyze_period$avg_returns$symbol\n\nvolatilities_period <- analyze_period$volatilities$volatility\nnames(volatilities_period) <- analyze_period$volatilities$symbol\n\ncorr_matrix_period <- analyze_period$corr_matrix\nnum_stocks_period <- length(volatilities_period)\n```\n:::\n\n\n### Simulation: 2. Bias the random weights\n\nThis is an experiment to see if we can bias the random weights to get a better result. Rather than deduce a formula, I decided to ask, what is a more (or less) desirable feature of a diversifying asset? (in the mean-variance framework, it's an asset with low marginal volatility). I decided to include the Sharpe ratio, expected utility (i.e., the expected rate of return minus half the risk aversion coeffient multiplied by the variance), and average correlation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalculate_desirability <- function(exp_returns, volatilities, corr_matrix, A, risk_free_rate, \n                                   utility_weight, sharpe_weight, correlation_weight) {\n\n    # Calculate the variance as the square of volatility\n    variance <- volatilities^2\n    \n    # Calculate the utility for each sector\n    utility <- exp_returns - 0.5 * A * variance\n    \n    # Calculate the Sharpe ratio for each sector\n    sharpe_ratio <- (exp_returns - risk_free_rate) / volatilities\n    \n    # Calculate the average correlation for each sector\n    avg_correlation <- apply(corr_matrix, 1, function(x) mean(x[-which(x == 1)], na.rm = TRUE))\n    write.matrix(corr_matrix, \"avg_correlation.csv\", sep = \",\")\n    \n    # Calculate the desirability score\n    desirability_score <- utility_weight * (utility * 100) +\n        sharpe_weight * (sharpe_ratio * 3 ) -\n        correlation_weight * avg_correlation # Negative because lower correlation is better\n    \n    # Create a data frame for sector desirability\n    desirability_df <- data.frame(sector = names(exp_returns),\n                                  exp_returns = exp_returns,\n                                  volatilities = volatilities,\n                                  utility = utility,\n                                  sharpe_ratio = sharpe_ratio,\n                                  avg_correlation = avg_correlation,\n                                  desirability_score = desirability_score)\n    \n    # Sort by desirability score\n    desirability_df <- desirability_df[order(-desirability_df$desirability_score),]\n    \n    return(desirability_df)\n}\n\n# Example parameters\nA <- 3  # Risk aversion coefficient\nrisk_free_rate <- 0.0  # Risk-free rate\nutility_weight <- 0.3\nsharpe_weight <- 0.4\ncorrelation_weight <- 0.3\n\n# Calculate desirability using the extracted components\nsector_desirability <- calculate_desirability(exp_returns_period, volatilities_period, corr_matrix_period, A, risk_free_rate, utility_weight, sharpe_weight, correlation_weight)\n\nsector_desirability |> gt() |> \n    cols_label(sector = \"Ticker\",\n               exp_returns = \"Return\",\n               volatilities = \"Vol\",\n               utility = \"Utility\",\n               sharpe_ratio = \"Sharpe\",\n               avg_correlation = \"Avg Corr\",\n               desirability_score = \"Desirability\") |>\n    fmt_percent(columns = 2:3) |> \n    fmt_number(columns = 4:7, decimals = 4)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"gpyxqcdoju\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#gpyxqcdoju table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#gpyxqcdoju thead, #gpyxqcdoju tbody, #gpyxqcdoju tfoot, #gpyxqcdoju tr, #gpyxqcdoju td, #gpyxqcdoju th {\n  border-style: none;\n}\n\n#gpyxqcdoju p {\n  margin: 0;\n  padding: 0;\n}\n\n#gpyxqcdoju .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#gpyxqcdoju .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#gpyxqcdoju .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#gpyxqcdoju .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#gpyxqcdoju .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gpyxqcdoju .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gpyxqcdoju .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gpyxqcdoju .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#gpyxqcdoju .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#gpyxqcdoju .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#gpyxqcdoju .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#gpyxqcdoju .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#gpyxqcdoju .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#gpyxqcdoju .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#gpyxqcdoju .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#gpyxqcdoju .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#gpyxqcdoju .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#gpyxqcdoju .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#gpyxqcdoju .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gpyxqcdoju .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#gpyxqcdoju .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#gpyxqcdoju .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#gpyxqcdoju .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gpyxqcdoju .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#gpyxqcdoju .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#gpyxqcdoju .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gpyxqcdoju .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gpyxqcdoju .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#gpyxqcdoju .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gpyxqcdoju .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#gpyxqcdoju .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gpyxqcdoju .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gpyxqcdoju .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gpyxqcdoju .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gpyxqcdoju .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gpyxqcdoju .gt_left {\n  text-align: left;\n}\n\n#gpyxqcdoju .gt_center {\n  text-align: center;\n}\n\n#gpyxqcdoju .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#gpyxqcdoju .gt_font_normal {\n  font-weight: normal;\n}\n\n#gpyxqcdoju .gt_font_bold {\n  font-weight: bold;\n}\n\n#gpyxqcdoju .gt_font_italic {\n  font-style: italic;\n}\n\n#gpyxqcdoju .gt_super {\n  font-size: 65%;\n}\n\n#gpyxqcdoju .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#gpyxqcdoju .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#gpyxqcdoju .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#gpyxqcdoju .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#gpyxqcdoju .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#gpyxqcdoju .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#gpyxqcdoju .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Ticker\">Ticker</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Return\">Return</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Vol\">Vol</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Utility\">Utility</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Sharpe\">Sharpe</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Avg Corr\">Avg Corr</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Desirability\">Desirability</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"sector\" class=\"gt_row gt_left\">XLK</td>\n<td headers=\"exp_returns\" class=\"gt_row gt_right\">1.50%</td>\n<td headers=\"volatilities\" class=\"gt_row gt_right\">5.17%</td>\n<td headers=\"utility\" class=\"gt_row gt_right\">0.0110</td>\n<td headers=\"sharpe_ratio\" class=\"gt_row gt_right\">0.2909</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.5422</td>\n<td headers=\"desirability_score\" class=\"gt_row gt_right\">0.5171</td></tr>\n    <tr><td headers=\"sector\" class=\"gt_row gt_left\">XLV</td>\n<td headers=\"exp_returns\" class=\"gt_row gt_right\">1.01%</td>\n<td headers=\"volatilities\" class=\"gt_row gt_right\">3.99%</td>\n<td headers=\"utility\" class=\"gt_row gt_right\">0.0077</td>\n<td headers=\"sharpe_ratio\" class=\"gt_row gt_right\">0.2534</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.7093</td>\n<td headers=\"desirability_score\" class=\"gt_row gt_right\">0.3230</td></tr>\n    <tr><td headers=\"sector\" class=\"gt_row gt_left\">XLP</td>\n<td headers=\"exp_returns\" class=\"gt_row gt_right\">0.72%</td>\n<td headers=\"volatilities\" class=\"gt_row gt_right\">3.64%</td>\n<td headers=\"utility\" class=\"gt_row gt_right\">0.0052</td>\n<td headers=\"sharpe_ratio\" class=\"gt_row gt_right\">0.1983</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.5484</td>\n<td headers=\"desirability_score\" class=\"gt_row gt_right\">0.2304</td></tr>\n    <tr><td headers=\"sector\" class=\"gt_row gt_left\">XLY</td>\n<td headers=\"exp_returns\" class=\"gt_row gt_right\">1.04%</td>\n<td headers=\"volatilities\" class=\"gt_row gt_right\">5.42%</td>\n<td headers=\"utility\" class=\"gt_row gt_right\">0.0060</td>\n<td headers=\"sharpe_ratio\" class=\"gt_row gt_right\">0.1918</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.6908</td>\n<td headers=\"desirability_score\" class=\"gt_row gt_right\">0.2027</td></tr>\n    <tr><td headers=\"sector\" class=\"gt_row gt_left\">XLI</td>\n<td headers=\"exp_returns\" class=\"gt_row gt_right\">0.91%</td>\n<td headers=\"volatilities\" class=\"gt_row gt_right\">5.12%</td>\n<td headers=\"utility\" class=\"gt_row gt_right\">0.0052</td>\n<td headers=\"sharpe_ratio\" class=\"gt_row gt_right\">0.1785</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.6589</td>\n<td headers=\"desirability_score\" class=\"gt_row gt_right\">0.1728</td></tr>\n    <tr><td headers=\"sector\" class=\"gt_row gt_left\">XLF</td>\n<td headers=\"exp_returns\" class=\"gt_row gt_right\">0.87%</td>\n<td headers=\"volatilities\" class=\"gt_row gt_right\">5.44%</td>\n<td headers=\"utility\" class=\"gt_row gt_right\">0.0042</td>\n<td headers=\"sharpe_ratio\" class=\"gt_row gt_right\">0.1594</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.7085</td>\n<td headers=\"desirability_score\" class=\"gt_row gt_right\">0.1057</td></tr>\n    <tr><td headers=\"sector\" class=\"gt_row gt_left\">XLU</td>\n<td headers=\"exp_returns\" class=\"gt_row gt_right\">0.70%</td>\n<td headers=\"volatilities\" class=\"gt_row gt_right\">4.35%</td>\n<td headers=\"utility\" class=\"gt_row gt_right\">0.0042</td>\n<td headers=\"sharpe_ratio\" class=\"gt_row gt_right\">0.1613</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.7629</td>\n<td headers=\"desirability_score\" class=\"gt_row gt_right\">0.0899</td></tr>\n    <tr><td headers=\"sector\" class=\"gt_row gt_left\">XLB</td>\n<td headers=\"exp_returns\" class=\"gt_row gt_right\">0.73%</td>\n<td headers=\"volatilities\" class=\"gt_row gt_right\">5.30%</td>\n<td headers=\"utility\" class=\"gt_row gt_right\">0.0031</td>\n<td headers=\"sharpe_ratio\" class=\"gt_row gt_right\">0.1372</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.6885</td>\n<td headers=\"desirability_score\" class=\"gt_row gt_right\">0.0499</td></tr>\n    <tr><td headers=\"sector\" class=\"gt_row gt_left\">XLC</td>\n<td headers=\"exp_returns\" class=\"gt_row gt_right\">0.58%</td>\n<td headers=\"volatilities\" class=\"gt_row gt_right\">6.09%</td>\n<td headers=\"utility\" class=\"gt_row gt_right\">0.0003</td>\n<td headers=\"sharpe_ratio\" class=\"gt_row gt_right\">0.0959</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.6580</td>\n<td headers=\"desirability_score\" class=\"gt_row gt_right\">−0.0738</td></tr>\n    <tr><td headers=\"sector\" class=\"gt_row gt_left\">XLRE</td>\n<td headers=\"exp_returns\" class=\"gt_row gt_right\">0.46%</td>\n<td headers=\"volatilities\" class=\"gt_row gt_right\">5.01%</td>\n<td headers=\"utility\" class=\"gt_row gt_right\">0.0008</td>\n<td headers=\"sharpe_ratio\" class=\"gt_row gt_right\">0.0919</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.7664</td>\n<td headers=\"desirability_score\" class=\"gt_row gt_right\">−0.0944</td></tr>\n    <tr><td headers=\"sector\" class=\"gt_row gt_left\">XLE</td>\n<td headers=\"exp_returns\" class=\"gt_row gt_right\">0.40%</td>\n<td headers=\"volatilities\" class=\"gt_row gt_right\">8.35%</td>\n<td headers=\"utility\" class=\"gt_row gt_right\">−0.0064</td>\n<td headers=\"sharpe_ratio\" class=\"gt_row gt_right\">0.0483</td>\n<td headers=\"avg_correlation\" class=\"gt_row gt_right\">0.7167</td>\n<td headers=\"desirability_score\" class=\"gt_row gt_right\">−0.3499</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n### Simulation: 3. Setup the simulation\n\nThe **get_random_weights** function returns a dataframe of random weights (that sum to 1). Each column is a set of weights for a single simulation.\n\nThis adds one innovation to the (my previous) naive approach. As previously, I still assume: the *expected return* for each stock is the average return for that stock over the entire period; the *volatility* for each stock is the average volatility for that stock over the entire period; and the *correlation matrix* (which obviously implies the *covariance matrix*) is computed from the pairwise (log) return vectors. In short, I'm assuming that the future will be like the past.\n\nThe innovation is that I bias the random weights to slightly favor the stocks with the highest \"desirability\" scores, as defined in the previous chunk. Desirability is just a weighted average of Utility, Sharpe ratio and (the inverse of) average correlation. Once random weights are selected, the portfolio return and volatility are calculated; and those don't depend on the bias. The idea here is simply to (probably *slightly*) favor the simulation's density toward the efficient segment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# returns a data frame of random weights\n# rows = weight per stock; columns = number of simulations\nget_random_weights <- function(num_stocks, num_simulations, probabilities, row_names = NULL) {\n    set.seed(47391)\n    weights_df <- matrix(nrow = num_stocks, ncol = num_simulations)\n\n    for (i in 1:num_simulations) {\n        # Generate weights influenced by probabilities\n        weights <- runif(num_stocks) * probabilities\n        weights_df[, i] <- weights / sum(weights)  # Normalize the weights\n    }\n    \n    weights_df <- as.data.frame(weights_df)\n    \n    if (!is.null(row_names) && length(row_names) == num_stocks) {\n        rownames(weights_df) <- row_names\n    }\n\n    return(weights_df)\n}\n\n# single simulation: given a set of weights, computes the expected return and volatility\nport_sim <- function(exp_returns, volatilities, corr_matrix, weights) {\n    \n    cov_matrix <- outer(volatilities, volatilities) * corr_matrix\n    port_variance <- t(weights) %*% cov_matrix %*% weights\n    port_exp_return <- sum(weights * exp_returns)\n\n    return(list(exp_returns = exp_returns, \n                volatilities = volatilities,\n                cov_matrix = cov_matrix, \n                corr_matrix = corr_matrix,\n                port_variance = port_variance,\n                port_exp_return = port_exp_return))\n}\n\n# runs a port_simulation for each column in the weights_df\nrun_sims <- function(exp_returns, volatilities, corr_matrix, weights_df) {\n    simulations <- map(1:ncol(weights_df), ~ {\n        weights_vector <- weights_df[, .x]\n        port_sim(exp_returns, volatilities, corr_matrix, weights_vector)\n        })\n    \n    return(simulations)\n}\n```\n:::\n\n\n### Simulation: 4. Run the simulation (on a single set)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnum_sims <- 10000  # Set the number of simulations\n\nsector_desirability$desirability_score <- pmax(sector_desirability$desirability_score, 0)\ntotal_score <- sum(sector_desirability$desirability_score)\nprobabilities <- sector_desirability$desirability_score / total_score\nnames(probabilities) <- sector_desirability$sector\nordered_probabilities <- probabilities[names(exp_returns_period)]\n\nrow_symbols <- names(exp_returns_period)\nrandom_weights_df_period <- get_random_weights(num_stocks_period, num_sims,\n                                               ordered_probabilities, row_names = row_symbols)\n# View first 5 columns (= simulations/trials)\nrandom_weights_df_period |> dplyr::select(1:5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             V1         V2         V3         V4          V5\nXLB  0.02904037 0.05416160 0.02778504 0.02113193 0.068640906\nXLC  0.00000000 0.00000000 0.00000000 0.00000000 0.000000000\nXLE  0.00000000 0.00000000 0.00000000 0.00000000 0.000000000\nXLF  0.07715561 0.05391842 0.11792035 0.04413683 0.032498273\nXLI  0.07038136 0.14378987 0.10358710 0.15823483 0.106281755\nXLK  0.39217482 0.08140453 0.17201659 0.24347193 0.290417879\nXLP  0.10247956 0.30004566 0.16088151 0.19679720 0.079391475\nXLRE 0.00000000 0.00000000 0.00000000 0.00000000 0.000000000\nXLU  0.01658244 0.08766262 0.13995473 0.01986224 0.006779199\nXLV  0.23783268 0.04282416 0.04622473 0.22763640 0.189368578\nXLY  0.07435316 0.23619314 0.23162997 0.08872864 0.226621935\n```\n:::\n\n```{.r .cell-code}\nsim_results_period <- run_sims(exp_returns_period, \n                              volatilities_period, \n                              corr_matrix_period, \n                              random_weights_df_period)\n\n# Testing\n# print(sim_results_period[[1]])\n\nresults_df_period <- map_dfr(sim_results_period, ~ data.frame(Exp_Return = .x$port_exp_return, \n                                                            Std_Dev = sqrt(.x$port_variance)))\n# Define the risk-free rate\nrisk_free_cml_1 <- 0\nrisk_free_cml_2 <- 0.005\n\n# Calculate the Sharpe Ratio for each simulation\nresults_df_period <- results_df_period |> \n    mutate(\n        Sharpe_Ratio_1 = (Exp_Return - risk_free_cml_1) / Std_Dev,\n        Sharpe_Ratio_2 = (Exp_Return - risk_free_cml_2) / Std_Dev\n        )\n\n# Find the row with the highest Sharpe Ratio\nbest_sim_1 <- results_df_period[which.max(results_df_period$Sharpe_Ratio_1), ]\nbest_sim_2 <- results_df_period[which.max(results_df_period$Sharpe_Ratio_2), ]\n\n# Print the best simulation result\nprint(best_sim_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Exp_Return    Std_Dev Sharpe_Ratio_1 Sharpe_Ratio_2\n5333 0.01181061 0.03765077      0.3136884       0.180889\n```\n:::\n\n```{.r .cell-code}\nprint(best_sim_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Exp_Return    Std_Dev Sharpe_Ratio_1 Sharpe_Ratio_2\n6340  0.0129082 0.04164322      0.3099713      0.1899037\n```\n:::\n\n```{.r .cell-code}\n# View summarized results for daily returns\nprint(head(results_df_period))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Exp_Return    Std_Dev Sharpe_Ratio_1 Sharpe_Ratio_2\n1 0.011451643 0.03877509      0.2953350      0.1663863\n2 0.009070018 0.03843242      0.2359992      0.1059007\n3 0.009775921 0.03997072      0.2445771      0.1194855\n4 0.010426927 0.03721517      0.2801795      0.1458257\n5 0.011009259 0.03991820      0.2757955      0.1505393\n6 0.011803121 0.04004292      0.2947617      0.1698957\n```\n:::\n:::\n\n\n## Visualize the results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\nresults_df <- results_df_period # continuity from prior\nresults_df <- results_df |> \n    arrange(Std_Dev) |> \n    mutate(is_efficient = Exp_Return >= cummax(Exp_Return))\n\nefficient_portfolios <- results_df |> \n    arrange(Std_Dev)  |> \n    mutate(cummax_return = cummax(Exp_Return)) |> \n    filter(Exp_Return >= cummax_return)\n\nefficient_model <- lm(Exp_Return ~ poly(Std_Dev, 2), data = efficient_portfolios)\n\np1 <- ggplot(results_df, aes(x = Std_Dev, y = Exp_Return, color = is_efficient)) +\n    geom_point() +\n    scale_color_manual(values = c(\"azure2\", \"springgreen4\")) + \n    theme_minimal() +\n    theme(\n        axis.title = element_blank(),\n        legend.position = \"none\"\n    )\n\np2 <- ggplot(results_df, aes(x = Std_Dev, y = Exp_Return)) +\n    geom_point(aes(color = is_efficient), size = 1) +  # Default size for all points\n    geom_point(data = filter(results_df, is_efficient), \n               aes(color = is_efficient), size = 2) +  # Larger size for efficient points\n    scale_color_manual(values = c(\"azure2\", \"springgreen4\")) +\n    theme_minimal() +\n    geom_line(data = efficient_portfolios, aes(x = Std_Dev, y = Exp_Return), colour = \"springgreen2\") +\n    theme(\n        axis.title = element_blank(),\n        legend.position = \"none\"\n    )\n\np3 <- ggplot(results_df, aes(x = Std_Dev, y = Exp_Return)) +\n    geom_point(color = \"azure2\") +\n    geom_smooth(data = efficient_portfolios, method = \"lm\", formula = y ~ poly(x, 2), \n                se = FALSE, colour = \"springgreen4\", linewidth = 1.5) +\n    labs(x = \"Std Dev (Risk)\",\n         y = \"Return\") +\n    theme_minimal()\n\n# Calculate a metric, Sharpe, that can inform COLOR fill\n# ... but it will only be based on the first risk-free rate!\n\nresults_df <- results_df %>%\n    mutate(efficiency = (Exp_Return - risk_free_cml_1)/ Std_Dev)\n\nslope_cml_1 <- (best_sim_1$Exp_Return - risk_free_cml_1) / best_sim_1$Std_Dev\nslope_cml_2 <- (best_sim_2$Exp_Return - risk_free_cml_2) / best_sim_2$Std_Dev\n\nextended_std_dev <- max(results_df_period$Std_Dev) * 1.2  # For example, 20% beyond the max std dev in the data\nextended_exp_return_1 <- risk_free_cml_1 + slope_cml_1 * extended_std_dev\nextended_exp_return_2 <- risk_free_cml_2 + slope_cml_2 * extended_std_dev\n\np4 <- ggplot(results_df, aes(x = Std_Dev, y = Exp_Return, color = efficiency)) +\n    geom_point() +\n    scale_color_gradientn(colors = c(\"firebrick1\", \"lightgoldenrod1\", \"springgreen2\"),\n                          values = scales::rescale(c(min(results_df$efficiency), \n                                                     max(results_df$efficiency)))) +\n    geom_segment(aes(x = 0, y = risk_free_cml_1, xend = extended_std_dev, yend = extended_exp_return_1), \n                 color = \"dodgerblue2\", linetype = \"dashed\", linewidth = 1) +\n    theme_minimal() +\n    coord_cartesian(xlim = c(0.03, 0.05), ylim = c(0.00750, extended_exp_return_1)) +\n    labs(x = \"Std Dev (Risk)\",\n         y = \"Return\", \n         color = \"efficiency\")\n\n(p1 + p2) / (p3 + p4 )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n### Add the second CML\n\n\n::: {.cell}\n\n```{.r .cell-code}\np5 <- p4 + geom_segment(aes(x = 0, y = risk_free_cml_2, xend = extended_std_dev, yend = extended_exp_return_2), \n                 color = \"purple2\", linetype = \"dashed\", linewidth = 1) \np5\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}