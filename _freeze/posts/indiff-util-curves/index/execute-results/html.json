{
  "hash": "a14c44987ff7af0f91b55aa326c17272",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Indifference Curves vs Portfolio Possibilities Curve (PPC)\ndescription: Each indifference curve represents a different level of utility for an investo's given risk aversion coefficient\nauthor: David Harper, CFA, FRM\ndate: 2024-06-06\ncategories: [code, analysis]\nexecute: \n  echo: true\n  warning: false\n---\n\n\n\nThis plot illustrates two indifference curves and their relationship to the portfolio possibilities curve (PPC, aka efficient frontier w.r.t to the upper segment of the BLUE line). The PPC represents the set of all possible portfolios that can be constructed from two risky assets. It's fairly trivial to plot the PPC. \n\nPlease **note**: there is no capital market line (CML) plottered here. The CML would be anchored by the riskfree rate, but the riskfree rate is not assumed in this model. Instead, _indifference curves_ are plotted. \n\nThe **utility function is given by U = E(r_p) - 0.5 * A * σ_p^2**, where U is the utility, E(r_p) is the expected return of the portfolio, σ_p is the standard deviation of the portfolio, and A is the risk aversion coefficient. The indifference curves represent the combinations of expected return and standard deviation that provide the same level of utility for an investor with a GIVEN risk aversion coefficient, A.The indifference curves are plotted for two different risk aversion coefficients. I showed dashed lines to illustrate choices that would be sub-optimal; e.g., the dashed orange line is sub-optimal to the solid orange line. The orange utility curve reflects a higher risk aversion coefficient than the green utility curve. The tangency points are the points on the PPC that are tangent to the indifference curves. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(ggplot2)\n\n# Initialize parameters\ninitialize_params <- function() {\n    list(\n        E_r1 = 0.12,  # Expected return of asset 1\n        E_r2 = 0.08,  # Expected return of asset 2\n        σ1 = 0.20,    # Standard deviation of asset 1\n        σ2 = 0.15,    # Standard deviation of asset 2\n        ρ = 0.1       # Correlation between assets\n    )\n}\n\n# Calculate portfolio returns and standard deviations\ncalculate_portfolio_metrics <- function(weights, params) {\n    portfolio_returns <- weights * params$E_r1 + (1 - weights) * params$E_r2\n    portfolio_std_devs <- sqrt(weights^2 * params$σ1^2 + (1 - weights)^2 * params$σ2^2 + \n                                   2 * weights * (1 - weights) * params$σ1 * params$σ2 * params$ρ)\n    list(returns = portfolio_returns, std_devs = portfolio_std_devs)\n}\n\n# Find the weights that maximize utility for given risk aversion coefficient\nfind_tangency_weights <- function(params, A) {\n    utility_function <- function(w) {\n        E_r_p <- w * params$E_r1 + (1 - w) * params$E_r2\n        σ_p <- sqrt(w^2 * params$σ1^2 + (1 - w)^2 * params$σ2^2 + \n                        2 * w * (1 - w) * params$σ1 * params$σ2 * params$ρ)\n        U <- E_r_p - 0.5 * A * σ_p^2\n        return(-U)  # Minimize negative utility to maximize utility\n    }\n    optimal <- optimize(utility_function, c(0, 1))\n    return(optimal$minimum)\n}\n\n# Create indifference curve data\ncreate_indifference_curve <- function(U, A, max_std_dev) {\n    σ <- seq(0, max_std_dev, by = 0.01)\n    E_r <- U + 0.5 * A * σ^2\n    data.frame(σ = σ, E_r = E_r)\n}\n\n# Main plotting function\nplot_portfolio <- function(portfolio_metrics, tangency_points, subtitle_text) {\n    p <- ggplot() +\n        geom_point(aes(x = portfolio_metrics$std_devs, y = portfolio_metrics$returns), color = 'blue', size = 1) +\n        geom_path(aes(x = portfolio_metrics$std_devs, y = portfolio_metrics$returns), color = 'blue4', size = 2) +\n        labs(title = \"Portfolio Possibilities Curve with Indifference Curves\",\n             subtitle = subtitle_text,\n             x = \"Portfolio Standard Deviation\",\n             y = \"Expected Portfolio Return\") +\n        xlim(0.12, max(portfolio_metrics$std_devs) * 1.05) +\n        ylim(0.075, max(portfolio_metrics$returns) * 1.1) +\n        theme_minimal()\n    \n    for (param in tangency_points) {\n        indifference_curve <- create_indifference_curve(param$U, param$A, max(portfolio_metrics$std_devs))\n        p <- p + geom_line(data = indifference_curve, aes(x = σ, y = E_r), color = param$color, linetype = param$linetype, size = 1, show.legend = FALSE)\n    }\n    \n    print(p)\n}\n\n# Run the code\nparams <- initialize_params()\nweights <- seq(0, 1, by = 0.01)\nportfolio_metrics <- calculate_portfolio_metrics(weights, params)\n\n# Find tangency points\nA_low <- 1.2\nA_high <- 2.9\noptimal_weight_low <- find_tangency_weights(params, A_low)\noptimal_weight_high <- find_tangency_weights(params, A_high)\n\n# Calculate the utility values at the tangency points\ntangency_return_low <- optimal_weight_low * params$E_r1 + (1 - optimal_weight_low) * params$E_r2\ntangency_std_dev_low <- sqrt(optimal_weight_low^2 * params$σ1^2 + (1 - optimal_weight_low)^2 * params$σ2^2 + 2 * optimal_weight_low * (1 - optimal_weight_low) * params$σ1 * params$σ2 * params$ρ)\nU_low <- tangency_return_low - 0.5 * A_low * tangency_std_dev_low^2\n\ntangency_return_high <- optimal_weight_high * params$E_r1 + (1 - optimal_weight_high) * params$E_r2\ntangency_std_dev_high <- sqrt(optimal_weight_high^2 * params$σ1^2 + (1 - optimal_weight_high)^2 * params$σ2^2 + 2 * optimal_weight_high * (1 - optimal_weight_high) * params$σ1 * params$σ2 * params$ρ)\nU_high <- tangency_return_high - 0.5 * A_high * tangency_std_dev_high^2\n\n# Define indifference curve parameters for plotting\ntangency_points <- list(\n    list(U = U_low, A = A_low, color = \"green4\", linetype = \"solid\"),\n    list(U = U_high, A = A_high, color = \"darkorange2\", linetype = \"solid\"),\n    list(U = U_low - 0.002, A = A_low, color = \"green4\", linetype = \"dashed\"),\n    list(U = U_high - 0.002, A = A_high, color = \"darkorange2\", linetype = \"dashed\")\n)\n\n# Create subtitle text\nsubtitle_text <- sprintf(\"U_low: %.3f, A_low: %.1f, U_high: %.3f, A_high: %.1f\", U_low, A_low, U_high, A_high)\n\nplot_portfolio(portfolio_metrics, tangency_points, subtitle_text)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nprint(optimal_weight_low)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9351032\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(tangency_return_low)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1174041\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(tangency_std_dev_low)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1882434\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(optimal_weight_high)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5892585\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(tangency_return_high)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1035703\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(tangency_std_dev_high)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1383371\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}