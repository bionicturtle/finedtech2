{
  "hash": "75fbb6449e53fea53d96aac20a36ce00",
  "result": {
    "markdown": "---\ntitle: Volatility is a model\ndescription: Description here\nauthor: David Harper, CFA, FRM\ndate: 2023-11-12\ncategories: [code, analysis]\nexecute: \n  echo: true\n  warning: false\n---\n\n\nContents\n\n* Volatility as annualized standard deviation\n* Varies by frequency (periodicity) and window\n* Exponentially weighted moving average (EWMA)\n* GARCH(1,1)\n* The actual returns are non-normal (heavy-tailed)\n\nLoad packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidyquant)\nlibrary(patchwork)\nlibrary(scales)\nlibrary(writexl)\nlibrary(zoo)\nlibrary(moments)\n\nlibrary(rugarch); library(broom)\n\nlibrary(gt)\n```\n:::\n\n\n## Volatility as annualized standard deviation\n\nRetrieve prices, calculate log returns and create all_returns\\_\\* dataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# symbols <- c(\"PG\", \"JPM\", \"NVDA\")\n# mult_stocks <- tq_get(symbols, get = \"stock.prices\", from = \"2010-12-31\", to = \"2023-11-09\")\n# mult_stocks$symbol <- mult_stocks$symbol <- factor(mult_stocks$symbol, levels = c(\"PG\", \"JPM\", \"NVDA\"))\n# saveRDS(mult_stocks, \"mult_stocks.rds\")\n\nmult_stocks <- readRDS(\"mult_stocks.rds\")\n\n# tq_mutate_fun_options() returns list of compatible mutate functions by pkg \n\ncalculate_returns <- function(data, period) {\n  data |>\n    group_by(symbol) |>\n    tq_transmute(select = adjusted,\n                 mutate_fun = periodReturn, \n                 period = period, \n                 type = \"log\")\n}\n\nperiods <- c(\"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\")\n\n# all_returns_daily <- calculate_returns(mult_stocks, \"daily\")\n# all_returns_weekly <- calculate_returns(mult_stocks, \"weekly\")\n# all_returns_monthly <- calculate_returns(mult_stocks, \"monthly\")\n# all_returns_quarterly <- calculate_returns(mult_stocks, \"quarterly\")\n\nall_returns <- set_names(periods) |> map(~ calculate_returns(mult_stocks, .x))\nall_returns <- map(all_returns, ~ .x %>%\n                                     group_by(symbol) %>%\n                                     arrange(date) %>%  # Sort by date within each group\n                                     slice(-1) %>%      # Remove the first row for each group\n                                     ungroup())\n\nall_returns_daily     <- all_returns$daily\nall_returns_weekly    <- all_returns$weekly\nall_returns_quarterly <- all_returns$quarterly\nall_returns_monthly   <- all_returns$monthly\n```\n:::\n\n\nSave to Excel (to manually check calcualtions). But after first time, eval = FALSE\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_xlsx(all_returns, path = \"all_returns.xlsx\")\n\n# This assumes 'all_returns' is a named list of data frames\n# and each data frame has a 'symbol' column for stock tickers\n\n# Step 1: Split each data frame by 'symbol' and create a named list of data frames\nall_returns_by_stock <- map(all_returns, function(df) {\n  split(df, df$symbol)\n})\n\n# Step 2: Name each data frame according to the period and stock\nall_returns_by_stock <- imap(all_returns_by_stock, function(df_list, period_name) {\n  set_names(df_list, paste(period_name, names(df_list), sep = \"_\"))\n})\n\n# Flatten the list of lists into a single list of data frames\nall_returns_by_stock_flat <- flatten(all_returns_by_stock)\n\n# Step 3 and 4: Write the list of data frames to an Excel file\nwrite_xlsx(all_returns_by_stock_flat, path = \"all_returns_by_stock.xlsx\")\n```\n:::\n\n\n### Different frequencies but the same (four year) window\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalc_rolling_sd <- function(data, return_col_name, window_width) {\n  data |> \n        group_by(symbol) |> \n        mutate(rolling_sd = rollapply(get(return_col_name), \n                                      width = window_width, \n                                      FUN = sd, \n                                      align = \"right\", fill = NA)) |> \n        ungroup()\n}\n\n#  Window lengths for each frequency (aka, periodicity)\nW.daily     <- 250 * 4 \nW.weekly    <- 52 * 4  \nW.monthly   <- 12 * 4 \nW.quarterly <- 4 * 4 \n\nall_returns_daily <- calc_rolling_sd(all_returns_daily, \"daily.returns\", W.daily)\nall_returns_weekly <- calc_rolling_sd(all_returns_weekly, \"weekly.returns\", W.weekly)\nall_returns_monthly <- calc_rolling_sd(all_returns_monthly, \"monthly.returns\", W.monthly)\nall_returns_quarterly <- calc_rolling_sd(all_returns_quarterly, \"quarterly.returns\", W.quarterly)\n```\n:::\n\n\nStill different frequencies (aka, periodicity) but annualized\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to calculate annualized volatility and add frequency\ncalc_annualized_vol <- function(df, sd_col, periods_per_year, freq_label) {\n  df |> \n        mutate(\n            annualized_vol = !!rlang::sym(sd_col) * sqrt(periods_per_year),\n            frequency = freq_label\n    )\n}\n\n# Calculate annualized volatility for each dataframe EXCEPT Quarterly\nall_returns_daily <- calc_annualized_vol(all_returns_daily, \"rolling_sd\", 252, \"Daily\")\nall_returns_weekly <- calc_annualized_vol(all_returns_weekly, \"rolling_sd\", 52, \"Weekly\")\nall_returns_monthly <- calc_annualized_vol(all_returns_monthly, \"rolling_sd\", 12, \"Monthly\")\n\n# Combine the data frames into one\nall_returns_combined <- bind_rows(all_returns_daily, all_returns_weekly, all_returns_monthly)\nall_returns_combined <- all_returns_combined |> \n    mutate(frequency = factor(frequency, levels = c(\"Daily\", \"Weekly\", \"Monthly\")))\n\n# Plot the combined data with ggplot2\n\ncolor_pg <- \"chartreuse2\" # don't end up using these\ncolor_jpm <- \"dodgerblue2\"\ncolor_nvda <- \"coral1\"\n\ncolor_tenor1 <- \"khaki3\"\ncolor_tenor2 <- \"coral\"\ncolor_tenor3 <- \"lightseagreen\"\ncolor_tenor4 <- \"slateblue\" \n\ncustom_colors <- c(\"Daily\" = color_tenor1, \"Weekly\" = color_tenor2, \"Monthly\" = color_tenor3)\n\nall_returns_combined |> ggplot(aes(x = date, y = annualized_vol, \n                                   color = frequency, \n                                   group = interaction(symbol, frequency))) +\n    geom_line() +\n    labs(title = \"Annualized Volatility by Frequency\",\n         x = \"Date\",\n         y = \"Annualized Volatility\") +\n    theme_minimal() +\n    scale_color_manual(values = custom_colors) +\n    facet_wrap(~symbol)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# mean annualized vol by symbol and frequency\nall_returns_combined |> \n    group_by(symbol, frequency) |> \n    summarize(annualized_vol = mean(annualized_vol, na.rm = TRUE)) |> \n    pivot_wider(names_from = frequency, values_from = annualized_vol) |> \n    arrange(Daily)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 Ã— 4\n# Groups:   symbol [3]\n  symbol Daily Weekly Monthly\n  <fct>  <dbl>  <dbl>   <dbl>\n1 PG     0.176  0.164   0.147\n2 JPM    0.265  0.255   0.239\n3 NVDA   0.421  0.396   0.388\n```\n:::\n:::\n\n\n### Different windows but same (DAILY) frequency\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# colors from my var article\n# col_ticker_fills <- c(\"PG\" = \"chartreuse2\", \"JPM\" = \"dodgerblue2\", \"NVDA\" = \"coral1\")\n\nwindows <- c(20, 90, 250, 500)\n\n# parse into per-ticker df and delete rolling_sd column from prior\npg_data   <- all_returns_daily |> filter(symbol == \"PG\")   |> select(!rolling_sd)\njpm_data  <- all_returns_daily |> filter(symbol == \"JPM\")  |> select(!rolling_sd)\nnvda_data <- all_returns_daily |> filter(symbol == \"NVDA\") |> select(!rolling_sd)\n\n# Specify your window sizes directly in the loop\nfor (w in windows) {\n  pg_data <- pg_data |> \n      mutate(!!paste0(\"rolling_sd_\", w) := rollapply(daily.returns, \n                                                     width = w, \n                                                     FUN = sd, \n                                                     align = \"right\", fill = NA))\n  jpm_data <- jpm_data |> \n      mutate(!!paste0(\"rolling_sd_\", w) := rollapply(daily.returns, \n                                                     width = w, \n                                                     FUN = sd, \n                                                     align = \"right\", fill = NA))\n  nvda_data <- nvda_data |> \n      mutate(!!paste0(\"rolling_sd_\", w) := rollapply(daily.returns, \n                                                     width = w, \n                                                     FUN = sd,\n                                                     align = \"right\", fill = NA))\n}\n\nplot_rolling_sd <- function(data, stock_name, ylim, custom_colors, custom_alphas) {\n    # Assume data has columns 'date', and rolling_sd_* where * is the window size\n    rolling_sd_long <- data |> \n        pivot_longer(cols = starts_with(\"rolling_sd_\"), names_to = \"window\", values_to = \"rolling_sd\")\n    desired_order <- c(\"rolling_sd_20\", \"rolling_sd_90\", \"rolling_sd_250\", \"rolling_sd_500\")\n    rolling_sd_long$window <- factor(rolling_sd_long$window, levels = desired_order)\n    ggplot(rolling_sd_long, aes(x = date, y = rolling_sd, color = window)) +\n        geom_line(aes(alpha = window)) +\n        scale_color_manual(values = custom_colors) +\n        scale_alpha_manual(values = custom_alphas) + \n        labs(title = paste(\"Rolling Daily Vol (StdDev) for\", stock_name),\n             subtitle = paste(\"Different windows:\", paste(windows, collapse = \", \"), \"days\"),\n             x = \"Date\",\n             y = \"Rolling Standard Deviation\") + \n        theme_minimal() +\n        coord_cartesian(ylim = ylim) +\n        theme(legend.position = \"right\")\n}\n\n# custom_colors <- c(\"rolling_sd_20\" = \"firebrick1\", \n#                   \"rolling_sd_90\" = \"royalblue\", \n#                   \"rolling_sd_250\" = \"springgreen4\",\n#                   \"rolling_sd_500\" = \"darkorange\")\n\ncustom_colors <- c(\"rolling_sd_20\" = color_tenor1, \n                   \"rolling_sd_90\" = color_tenor2, \n                   \"rolling_sd_250\" = color_tenor3, \n                   \"rolling_sd_500\" = color_tenor4)\n\ncustom_alphas <- c(\"rolling_sd_20\" = 0.5, \n                   \"rolling_sd_90\" = 0.7, \n                   \"rolling_sd_250\" = 1.0,\n                   \"rolling_sd_500\" = 1.0)\n\npg_roll_plot <- plot_rolling_sd(pg_data, \"PG\", c(0, 0.0350), custom_colors, custom_alphas)\njpm_roll_plot <- plot_rolling_sd(jpm_data, \"JPM\", c(0, 0.0550), custom_colors, custom_alphas)\nnvda_roll_plot <- plot_rolling_sd(nvda_data, \"NVDA\", c(0, 0.0750), custom_colors, custom_alphas)\n\npg_roll_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\njpm_roll_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n```{.r .cell-code}\nnvda_roll_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-3.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to summarize and extract the most recent rolling standard deviations\n\nsummarize_and_extract_recent_sd <- function(data) {\n  summarized <- data %>%\n    summarize(\n      mean_sd_20 = mean(rolling_sd_20, na.rm = TRUE),\n      mean_sd_90 = mean(rolling_sd_90, na.rm = TRUE),\n      mean_sd_250 = mean(rolling_sd_250, na.rm = TRUE),\n      mean_sd_500 = mean(rolling_sd_500, na.rm = TRUE)\n    )\n  \n  most_recent <- data %>%\n    slice(n()) %>%\n    select(rolling_sd_20, rolling_sd_90, rolling_sd_250, rolling_sd_500) %>%\n    rename(recent_sd_20 = rolling_sd_20,\n           recent_sd_90 = rolling_sd_90,\n           recent_sd_250 = rolling_sd_250,\n           recent_sd_500 = rolling_sd_500)\n  \n  bind_cols(summarized, most_recent)\n}\n\n# Apply the function to each data frame and bind rows into a single tibble\nsummary_tibble <- bind_rows(\n  pg = summarize_and_extract_recent_sd(pg_data),\n  jpm = summarize_and_extract_recent_sd(jpm_data),\n  nvda = summarize_and_extract_recent_sd(nvda_data),\n  .id = \"stock\"\n)\n\nsummary_tibble |> \n    gt() |> \n    tab_header(\n        title = \"Rolling daily volatility\"\n    ) |> \n    cols_label(\n        mean_sd_20 = \"20\",\n        mean_sd_90 = \"90\",\n        mean_sd_250 = \"250\",\n        mean_sd_500 = \"500\",\n        recent_sd_20 = \"20\",\n        recent_sd_90 = \"90\",\n        recent_sd_250 = \"250\",\n        recent_sd_500 = \"500\"\n    ) |> \n    fmt_percent(columns = 2:9, \n                rows = everything()) |> \n    tab_spanner(\n        label = \"Mean\",\n        columns = 2:5\n    ) |> \n    tab_spanner(\n        label = \"Most recent (2023-11-08)\",\n        columns = 6:9\n    ) |> \n    cols_width(\n        mean_sd_20 ~ px(80),\n        recent_sd_20 ~ px(80)\n    ) |> \n    data_color(\n        columns = 6:9,\n        rows = 3,\n        method = \"numeric\",\n        domain = c(0.02, 0.04),\n        palette = c(\"lightcyan\", \"lightcyan3\")\n    )\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"rpoyscmwxa\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#rpoyscmwxa table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#rpoyscmwxa thead, #rpoyscmwxa tbody, #rpoyscmwxa tfoot, #rpoyscmwxa tr, #rpoyscmwxa td, #rpoyscmwxa th {\n  border-style: none;\n}\n\n#rpoyscmwxa p {\n  margin: 0;\n  padding: 0;\n}\n\n#rpoyscmwxa .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#rpoyscmwxa .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#rpoyscmwxa .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#rpoyscmwxa .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#rpoyscmwxa .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#rpoyscmwxa .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rpoyscmwxa .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#rpoyscmwxa .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#rpoyscmwxa .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#rpoyscmwxa .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#rpoyscmwxa .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#rpoyscmwxa .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#rpoyscmwxa .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#rpoyscmwxa .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#rpoyscmwxa .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#rpoyscmwxa .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#rpoyscmwxa .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#rpoyscmwxa .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#rpoyscmwxa .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rpoyscmwxa .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#rpoyscmwxa .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#rpoyscmwxa .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#rpoyscmwxa .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rpoyscmwxa .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#rpoyscmwxa .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#rpoyscmwxa .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rpoyscmwxa .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rpoyscmwxa .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#rpoyscmwxa .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rpoyscmwxa .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#rpoyscmwxa .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rpoyscmwxa .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#rpoyscmwxa .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rpoyscmwxa .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#rpoyscmwxa .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rpoyscmwxa .gt_left {\n  text-align: left;\n}\n\n#rpoyscmwxa .gt_center {\n  text-align: center;\n}\n\n#rpoyscmwxa .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#rpoyscmwxa .gt_font_normal {\n  font-weight: normal;\n}\n\n#rpoyscmwxa .gt_font_bold {\n  font-weight: bold;\n}\n\n#rpoyscmwxa .gt_font_italic {\n  font-style: italic;\n}\n\n#rpoyscmwxa .gt_super {\n  font-size: 65%;\n}\n\n#rpoyscmwxa .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#rpoyscmwxa .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#rpoyscmwxa .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#rpoyscmwxa .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#rpoyscmwxa .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#rpoyscmwxa .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#rpoyscmwxa .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" style=\"table-layout: fixed;\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <colgroup>\n    <col/>\n    <col style=\"width:80px;\"/>\n    <col/>\n    <col/>\n    <col/>\n    <col style=\"width:80px;\"/>\n    <col/>\n    <col/>\n    <col/>\n  </colgroup>\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"9\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Rolling daily volatility</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"stock\">stock</th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"4\" scope=\"colgroup\" id=\"Mean\">\n        <span class=\"gt_column_spanner\">Mean</span>\n      </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"4\" scope=\"colgroup\" id=\"Most recent (2023-11-08)\">\n        <span class=\"gt_column_spanner\">Most recent (2023-11-08)</span>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"20\">20</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"90\">90</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"250\">250</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"500\">500</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"20\">20</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"90\">90</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"250\">250</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"500\">500</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"stock\" class=\"gt_row gt_left\">pg</td>\n<td headers=\"mean_sd_20\" class=\"gt_row gt_right\">0.98%</td>\n<td headers=\"mean_sd_90\" class=\"gt_row gt_right\">1.03%</td>\n<td headers=\"mean_sd_250\" class=\"gt_row gt_right\">1.07%</td>\n<td headers=\"mean_sd_500\" class=\"gt_row gt_right\">1.09%</td>\n<td headers=\"recent_sd_20\" class=\"gt_row gt_right\">0.96%</td>\n<td headers=\"recent_sd_90\" class=\"gt_row gt_right\">0.86%</td>\n<td headers=\"recent_sd_250\" class=\"gt_row gt_right\">0.93%</td>\n<td headers=\"recent_sd_500\" class=\"gt_row gt_right\">1.18%</td></tr>\n    <tr><td headers=\"stock\" class=\"gt_row gt_left\">jpm</td>\n<td headers=\"mean_sd_20\" class=\"gt_row gt_right\">1.53%</td>\n<td headers=\"mean_sd_90\" class=\"gt_row gt_right\">1.61%</td>\n<td headers=\"mean_sd_250\" class=\"gt_row gt_right\">1.66%</td>\n<td headers=\"mean_sd_500\" class=\"gt_row gt_right\">1.66%</td>\n<td headers=\"recent_sd_20\" class=\"gt_row gt_right\">1.26%</td>\n<td headers=\"recent_sd_90\" class=\"gt_row gt_right\">1.01%</td>\n<td headers=\"recent_sd_250\" class=\"gt_row gt_right\">1.36%</td>\n<td headers=\"recent_sd_500\" class=\"gt_row gt_right\">1.64%</td></tr>\n    <tr><td headers=\"stock\" class=\"gt_row gt_left\">nvda</td>\n<td headers=\"mean_sd_20\" class=\"gt_row gt_right\">2.54%</td>\n<td headers=\"mean_sd_90\" class=\"gt_row gt_right\">2.64%</td>\n<td headers=\"mean_sd_250\" class=\"gt_row gt_right\">2.66%</td>\n<td headers=\"mean_sd_500\" class=\"gt_row gt_right\">2.64%</td>\n<td headers=\"recent_sd_20\" class=\"gt_row gt_right\" style=\"background-color: #CFECEC; color: #000000;\">2.76%</td>\n<td headers=\"recent_sd_90\" class=\"gt_row gt_right\" style=\"background-color: #D6F3F3; color: #000000;\">2.47%</td>\n<td headers=\"recent_sd_250\" class=\"gt_row gt_right\" style=\"background-color: #C4DFDF; color: #000000;\">3.25%</td>\n<td headers=\"recent_sd_500\" class=\"gt_row gt_right\" style=\"background-color: #BCD6D6; color: #000000;\">3.63%</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# GPT wrote this routine to summarize!\n\nsummarize_rolling_sd <- function(data) {\n  # Define the desired order for the window sizes\n  window_order <- c(\"rolling_sd_20\", \"rolling_sd_90\", \"rolling_sd_250\", \"rolling_sd_500\")\n  \n  summarized_data <- data %>% \n    summarize(across(starts_with(\"rolling_sd_\"), mean, na.rm = TRUE)) %>%\n    pivot_longer(cols = everything(), names_to = \"window\", values_to = \"rolling_sd\") %>%\n    mutate(window = factor(window, levels = window_order)) %>%\n    arrange(window)\n  \n  return(summarized_data)\n}\n\n# Apply the summarize function to each stock and combine into a single tibble\nall_summaries <- bind_rows(\n  pg = summarize_rolling_sd(pg_data), \n  jpm = summarize_rolling_sd(jpm_data), \n  nvda = summarize_rolling_sd(nvda_data), \n  .id = \"stock\"\n)\n\n# Print the combined summarized data\nprint(all_summaries)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 Ã— 3\n   stock window         rolling_sd\n   <chr> <fct>               <dbl>\n 1 pg    rolling_sd_20     0.00977\n 2 pg    rolling_sd_90     0.0103 \n 3 pg    rolling_sd_250    0.0107 \n 4 pg    rolling_sd_500    0.0109 \n 5 jpm   rolling_sd_20     0.0153 \n 6 jpm   rolling_sd_90     0.0161 \n 7 jpm   rolling_sd_250    0.0166 \n 8 jpm   rolling_sd_500    0.0166 \n 9 nvda  rolling_sd_20     0.0254 \n10 nvda  rolling_sd_90     0.0264 \n11 nvda  rolling_sd_250    0.0266 \n12 nvda  rolling_sd_500    0.0264 \n```\n:::\n:::\n\n\n## Exponentially weighted moving average (EWMA)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to calculate EWMA variance\ncalculate_ewma_variance <- function(returns, lambda, W) {\n    ewma_var <- rep(NA, length(returns))\n    ewma_var[W] <- var(returns[1:W])  # Initialize the first EWMA variance\n    for (i in (W+1):length(returns)) {\n        # Using the EWMA formula\n        ewma_var[i] <- lambda * ewma_var[i-1] + (1 - lambda) * returns[i]^2\n    }\n    return(ewma_var)\n}\n\n# Example lambda value\nW       <- 250\nlambda  <- 0.94\n\n# Use rollapply with your custom EWMA function\n# Assuming the 'returns' column in all_returns_daily is the daily return for each stock\nall_returns_daily <- all_returns_daily |> \n    group_by(symbol) |> \n    mutate(ewma_variance = calculate_ewma_variance(daily.returns, lambda, W)) |> \n    ungroup()\n\n# Calculate the EWMA volatility from the EWMA variance\nall_returns_daily <- all_returns_daily |>\n    mutate(ewma_sd = sqrt(ewma_variance))\n\n# Reshape the data to long format for ggplot2\nall_returns_long <- all_returns_daily |> \n    pivot_longer(cols = c(\"rolling_sd\", \"ewma_sd\"), \n                 names_to = \"sd_type\", \n                 values_to = \"sd_value\")\n\n# Plot the data with ggplot2\ncustom_sd_colors <- c(\"rolling_sd\" = color_tenor4, \"ewma_sd\" = color_tenor2)\n\nall_returns_long |> ggplot (aes(x = date, y = sd_value, color = sd_type)) +\n    geom_line(aes(alpha = sd_type)) + \n    scale_color_manual(values = custom_sd_colors) + \n    scale_alpha_manual(values = c(0.5, 1.0)) +\n    labs(title = \"EWMA is much more reactive than unweighted StdDev\",\n         subtitle = \"(rolling_sd window = 250 days * 4 years = 1000 days)\",\n         x = \"Date\",\n         y = \"Standard Deviation\") +\n    facet_wrap(~symbol) +\n    coord_cartesian(ylim = c(0, 0.050)) +\n    theme_minimal() +\n    theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nLet's compare different lambda (aka, smoothing) parameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\n\nplot_ewma_for_stock <- function(data, symbol, returns_col, lambda_list, \n                                custom_colors, custom_alphas, ylim) {\n\n    # Function to calculate EWMA variance - make sure this is defined in your environment\n    calculate_and_store_ewma <- function(data, symbol, returns_col, lambda_list) {\n\n        for (lambda in lambda_list) {\n            W = 250\n            lambda <- lambda\n            ewma_col_name <- paste0(\"lambda_\", as.character(lambda))\n            data <- data |> \n                mutate(\n                    !!ewma_col_name := sqrt(calculate_ewma_variance(get(returns_col), lambda, W))\n                )\n            }\n        return(data)\n        }\n    \n    # Calculate and store EWMA with multiple parameters for the specified stock\n    stock_ewma <- calculate_and_store_ewma(data, symbol, returns_col, lambda_list)\n    \n    # Pivot the data to long format for plotting\n    stock_ewma_long <- stock_ewma |> \n        pivot_longer(cols = starts_with(\"lambda\"), names_to = \"lambda\", values_to = \"ewma_sd\")\n    \n    # Plot the EWMA standard deviations for different parameter sets\n    gg <- ggplot(stock_ewma_long, aes(x = date, y = ewma_sd, color = lambda)) +\n        geom_line(aes(alpha = lambda)) +\n        scale_color_manual(values = custom_colors) +\n        scale_alpha_manual(values = custom_alphas) +\n        labs(title = paste(\"EWMA volatility for\", symbol, \"with Different Parameters\"),\n             x = \"Date\",\n             y = \"EWMA Standard Deviation\") +\n        coord_cartesian(ylim = c(0, ylim)) +\n        theme_minimal() +\n        theme(legend.position = \"right\")\n\n  return(gg)\n}\n\n# Define the sets of parameters you want to compare\nlambda_list <- c(0.91, 0.94, 0.97)\n\n# custom_colors <- c(\"lambda_0.91\" = \"firebrick1\", \n#                   \"lambda_0.94\" = \"royalblue\", \n#                   \"lambda_0.97\" = \"springgreen4\")\n\ncustom_colors <- c(\"lambda_0.91\" = color_tenor1, \n                   \"lambda_0.94\" = color_tenor2, \n                   \"lambda_0.97\" = color_tenor4)\n\ncustom_alphas <- c(\"lambda_0.91\" = 0.6, \n                   \"lambda_0.94\" = 0.8, \n                   \"lambda_0.97\" = 1.0)\n\njpm_ewma_plot <- plot_ewma_for_stock(jpm_data, \"JPM\", \"daily.returns\", lambda_list, \n                                custom_colors, custom_alphas, 0.080)\npg_ewma_plot <- plot_ewma_for_stock(pg_data, \"PG\", \"daily.returns\", lambda_list, \n                               custom_colors, custom_alphas, 0.0550)\nnvda_ewma_plot <- plot_ewma_for_stock(nvda_data, \"NVDA\", \"daily.returns\", lambda_list, \n                                 custom_colors, custom_alphas, 0.070)\n\njpm_ewma_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\npg_ewma_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n```{.r .cell-code}\nnvda_ewma_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-3.png){width=672}\n:::\n:::\n\n\n## GARCH(1,1)\n\n### Fitting the parameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# library(rugarch)\n# Define the GARCH(1,1) specification outside the loop to avoid redundancy\nspec <- ugarchspec(variance.model = list(model = \"sGARCH\", garchOrder = c(1, 1)),\n                   mean.model = list(armaOrder = c(0, 0), include.mean = TRUE),\n                   distribution.model = \"norm\")\n\n# Fit the GARCH(1,1) model for each stock symbol\ngarch_models <- all_returns_daily |> \n    group_by(symbol) |> \n    nest() |> \n    mutate(model = map(data, ~ ugarchfit(spec, data = .$daily.returns)))\n\n# Manual extraction of coefficients\ngarch_coef_manual <- garch_models |> \n    mutate(coef = map(model, function(m) as.data.frame(t(coef(m))))) |> \n    select(symbol, coef) |> \n    unnest(coef)\n\ngarch_coef_manual <- garch_coef_manual |> ungroup()\ngarch_coef_manual <- garch_coef_manual |> mutate(\n    gamma = 1 - alpha1 - beta1,\n    LR_vol = sqrt(omega / (1 - alpha1 - beta1))\n    )\n\ngarch_coef_manual |> select(-mu) |> \n    gt(rowname_col = \"symbol\") |> \n    fmt_scientific(columns = 2) |>\n    fmt_number(columns = 3:6, decimals = 4) \n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"alwdesptwc\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#alwdesptwc table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#alwdesptwc thead, #alwdesptwc tbody, #alwdesptwc tfoot, #alwdesptwc tr, #alwdesptwc td, #alwdesptwc th {\n  border-style: none;\n}\n\n#alwdesptwc p {\n  margin: 0;\n  padding: 0;\n}\n\n#alwdesptwc .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#alwdesptwc .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#alwdesptwc .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#alwdesptwc .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#alwdesptwc .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#alwdesptwc .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#alwdesptwc .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#alwdesptwc .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#alwdesptwc .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#alwdesptwc .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#alwdesptwc .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#alwdesptwc .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#alwdesptwc .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#alwdesptwc .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#alwdesptwc .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#alwdesptwc .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#alwdesptwc .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#alwdesptwc .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#alwdesptwc .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#alwdesptwc .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#alwdesptwc .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#alwdesptwc .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#alwdesptwc .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#alwdesptwc .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#alwdesptwc .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#alwdesptwc .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#alwdesptwc .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#alwdesptwc .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#alwdesptwc .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#alwdesptwc .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#alwdesptwc .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#alwdesptwc .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#alwdesptwc .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#alwdesptwc .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#alwdesptwc .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#alwdesptwc .gt_left {\n  text-align: left;\n}\n\n#alwdesptwc .gt_center {\n  text-align: center;\n}\n\n#alwdesptwc .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#alwdesptwc .gt_font_normal {\n  font-weight: normal;\n}\n\n#alwdesptwc .gt_font_bold {\n  font-weight: bold;\n}\n\n#alwdesptwc .gt_font_italic {\n  font-style: italic;\n}\n\n#alwdesptwc .gt_super {\n  font-size: 65%;\n}\n\n#alwdesptwc .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#alwdesptwc .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#alwdesptwc .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#alwdesptwc .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#alwdesptwc .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#alwdesptwc .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#alwdesptwc .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"omega\">omega</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"alpha1\">alpha1</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"beta1\">beta1</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"gamma\">gamma</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"LR_vol\">LR_vol</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_center gt_stub\">PG</th>\n<td headers=\"stub_1_1 omega\" class=\"gt_row gt_right\">1.06 Ã— 10<sup style='font-size: 65%;'>âˆ’5</sup></td>\n<td headers=\"stub_1_1 alpha1\" class=\"gt_row gt_right\">0.1310</td>\n<td headers=\"stub_1_1 beta1\" class=\"gt_row gt_right\">0.7744</td>\n<td headers=\"stub_1_1 gamma\" class=\"gt_row gt_right\">0.0946</td>\n<td headers=\"stub_1_1 LR_vol\" class=\"gt_row gt_right\">0.0106</td></tr>\n    <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_center gt_stub\">JPM</th>\n<td headers=\"stub_1_2 omega\" class=\"gt_row gt_right\">9.31 Ã— 10<sup style='font-size: 65%;'>âˆ’6</sup></td>\n<td headers=\"stub_1_2 alpha1\" class=\"gt_row gt_right\">0.0994</td>\n<td headers=\"stub_1_2 beta1\" class=\"gt_row gt_right\">0.8659</td>\n<td headers=\"stub_1_2 gamma\" class=\"gt_row gt_right\">0.0347</td>\n<td headers=\"stub_1_2 LR_vol\" class=\"gt_row gt_right\">0.0164</td></tr>\n    <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_center gt_stub\">NVDA</th>\n<td headers=\"stub_1_3 omega\" class=\"gt_row gt_right\">3.28 Ã— 10<sup style='font-size: 65%;'>âˆ’5</sup></td>\n<td headers=\"stub_1_3 alpha1\" class=\"gt_row gt_right\">0.1006</td>\n<td headers=\"stub_1_3 beta1\" class=\"gt_row gt_right\">0.8628</td>\n<td headers=\"stub_1_3 gamma\" class=\"gt_row gt_right\">0.0366</td>\n<td headers=\"stub_1_3 LR_vol\" class=\"gt_row gt_right\">0.0300</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n### Plotting GARCH(1,1) volatility\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to calculate GARCH(1,1) variance\ncalculate_garch_variance <- function(returns, alpha, beta, gamma, W) {\n    long_run_variance <- var(returns[1:W], na.rm = TRUE)\n    omega <- gamma * long_run_variance\n    garch_var <- rep(NA, length(returns))\n    garch_var[W] <- var(returns[1:W])  # Initialize the first GARCH variance\n    \n    for (i in (W+1):length(returns)) {\n        garch_var[i] <- omega + alpha * returns[i]^2 + beta * garch_var[i-1]\n    }\n    \n    return(garch_var)\n}\n\nalpha <- 0.12; beta <- 0.78; gamma <- 1 - alpha - beta\nalpha_mr <- 0.03; beta_mr <- 0.83; gamma_mr <- 1 - alpha_mr - beta_mr\n\n# Calculate rolling GARCH(1,1) variance\nall_returns_daily <- all_returns_daily |> \n  group_by(symbol) |> \n  mutate(garch_variance   = calculate_garch_variance(daily.returns, alpha, beta, \n                                                   gamma, W.daily),\n         garch_variance_mr = calculate_garch_variance(daily.returns, alpha_mr, beta_mr,\n                                                     gamma_mr, W.daily))  |> \n  ungroup()\n\n# Calculate the GARCH(1,1) standard deviation from the GARCH variance\nall_returns_daily <- all_returns_daily |> \n    mutate(garch_sd = sqrt(garch_variance),\n           garch_sd_mr = sqrt(garch_variance_mr))\n\nall_returns_long <- all_returns_daily |> \n    pivot_longer(cols = c(\"garch_sd\", \"garch_sd_mr\", \"ewma_sd\"), \n                 names_to = \"sd_type\", values_to = \"sd_value\")\n\n\ncustom_line_colors <- c(\"garch_sd\" = color_tenor3, \n                        \"garch_sd_mr\" = color_tenor2, \n                        \"ewma_sd\" = color_tenor1)\ncustom_line_alphas <- c(\"garch_sd\" = 1.0, \n                        \"garch_sd_mr\" = 1.0, \n                        \"ewma_sd\" = 0.8)\n\n# Plot the data with ggplot2\ngarch_p1 <- ggplot(all_returns_long, aes(x = date, y = sd_value, color = sd_type)) +\n  geom_line(aes(alpha = sd_type)) +\n    scale_color_manual(values = custom_line_colors) +  # Set custom colors\n    scale_alpha_manual(values = custom_line_alphas) +  # Set custom alphas\n  labs(title = \"GARCH(1,1) versus EMWA\",\n       subtitle = \"The second GARCH,garch_sd_mr, has higher Î³ -> greater mean reversion (m.r.)\",\n       x = \"Date\",\n       y = \"Standard Deviation\") +\n    facet_wrap(~symbol) +\n    coord_cartesian(ylim = c(0, 0.05)) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\ngarch_p1\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## None of the returns are nearly normal\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_histogram_with_normal <- function(stock_data, symbol, return_col) {\n    # Calculate mean and standard deviation of returns\n    mean_return <- mean(stock_data[[return_col]], na.rm = TRUE)\n    sd_return <- sd(stock_data[[return_col]], na.rm = TRUE)\n    \n    binwidth <- (max(stock_data[[return_col]], na.rm = TRUE) - \n                     min(stock_data[[return_col]], na.rm = TRUE)) / 120\n    # print(binwidth) experimenting with binwidth\n    \n    # Create the histogram and overlay the normal distribution\n    ggplot(stock_data, aes_string(x = return_col)) +\n        geom_histogram(aes(y = ..density..), binwidth = binwidth, \n                       color = \"coral\", fill = \"khaki3\", alpha = 0.6) +\n        stat_function(fun = dnorm, args = list(mean = mean_return, sd = sd_return), \n                      color = \"slateblue\", size = 1) +\n        labs(title = paste(\"Histogram of Returns with Normal Distribution for\", symbol),\n             x = \"Returns\",\n             y = \"Density\") +\n        theme_minimal() +\n        coord_cartesian(xlim = c(-0.1, 0.1))\n}\n\njpm_hist_plot <- plot_histogram_with_normal(jpm_data, \"JPM\", \"daily.returns\")\npg_hist_plot <- plot_histogram_with_normal(pg_data, \"PG\", \"daily.returns\")\nnvda_hist_plot <- plot_histogram_with_normal(nvda_data, \"NVDA\", \"daily.returns\")\n\njpm_hist_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\npg_hist_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n\n```{.r .cell-code}\nnvda_hist_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-3.png){width=672}\n:::\n:::\n\n\nSummarize the moments\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to calculate the summary statistics\ncalculate_stats <- function(data, return_col) {\n    data |> \n        summarize(\n            mean = mean({{ return_col }}, na.rm = TRUE),\n            sd = sd({{ return_col }}, na.rm = TRUE),\n            skew = skewness({{ return_col }}, na.rm = TRUE),\n            kurt = kurtosis({{ return_col }}, na.rm = TRUE)\n            )\n}\n\n\n# Calculate statistics for each stock and store them in a tibble\nstats_tibble <- tibble(\n    stock = c(\"PG\", \"JPM\", \"NVDA\"),\n    stats = list(\n        calculate_stats(pg_data, daily.returns),\n        calculate_stats(jpm_data, daily.returns),\n        calculate_stats(nvda_data, daily.returns)\n        )\n    )\n\n# Unnest the stats column to expand the tibble\nstats_tibble <- stats_tibble |> \n    unnest(stats)\n\nstats_tibble |> gt() |> \n    fmt_percent(columns = vars(mean, sd), decimals = 4) |>\n    fmt_number(columns = vars(skew, kurt), decimals = 4) |> \n    data_color(\n        columns = 4,\n        domain = c(-0.2, 0.4),\n        palette = c(\"lightpink\", \"seagreen1\"),\n        alpha = 0.5\n    ) |> \n    data_color(\n        columns = 5,\n        domain = c(0, 15),\n        palette = c(\"lightpink\", \"seagreen1\"),\n        alpha = 0.5\n    )\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"hdvbvadpei\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#hdvbvadpei table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#hdvbvadpei thead, #hdvbvadpei tbody, #hdvbvadpei tfoot, #hdvbvadpei tr, #hdvbvadpei td, #hdvbvadpei th {\n  border-style: none;\n}\n\n#hdvbvadpei p {\n  margin: 0;\n  padding: 0;\n}\n\n#hdvbvadpei .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#hdvbvadpei .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#hdvbvadpei .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#hdvbvadpei .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#hdvbvadpei .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#hdvbvadpei .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hdvbvadpei .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#hdvbvadpei .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#hdvbvadpei .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#hdvbvadpei .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#hdvbvadpei .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#hdvbvadpei .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#hdvbvadpei .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#hdvbvadpei .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#hdvbvadpei .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#hdvbvadpei .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#hdvbvadpei .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#hdvbvadpei .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#hdvbvadpei .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hdvbvadpei .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#hdvbvadpei .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#hdvbvadpei .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#hdvbvadpei .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hdvbvadpei .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#hdvbvadpei .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#hdvbvadpei .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hdvbvadpei .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hdvbvadpei .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#hdvbvadpei .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hdvbvadpei .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#hdvbvadpei .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hdvbvadpei .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#hdvbvadpei .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hdvbvadpei .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#hdvbvadpei .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hdvbvadpei .gt_left {\n  text-align: left;\n}\n\n#hdvbvadpei .gt_center {\n  text-align: center;\n}\n\n#hdvbvadpei .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#hdvbvadpei .gt_font_normal {\n  font-weight: normal;\n}\n\n#hdvbvadpei .gt_font_bold {\n  font-weight: bold;\n}\n\n#hdvbvadpei .gt_font_italic {\n  font-style: italic;\n}\n\n#hdvbvadpei .gt_super {\n  font-size: 65%;\n}\n\n#hdvbvadpei .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#hdvbvadpei .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#hdvbvadpei .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#hdvbvadpei .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#hdvbvadpei .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#hdvbvadpei .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#hdvbvadpei .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"stock\">stock</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"mean\">mean</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"sd\">sd</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"skew\">skew</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"kurt\">kurt</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"stock\" class=\"gt_row gt_left\">PG</td>\n<td headers=\"mean\" class=\"gt_row gt_right\">0.0380%</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">1.1017%</td>\n<td headers=\"skew\" class=\"gt_row gt_right\" style=\"background-color: rgba(220,207,183,0.5); color: #000000;\">âˆ’0.0216</td>\n<td headers=\"kurt\" class=\"gt_row gt_right\" style=\"background-color: rgba(91,254,160,0.5); color: #000000;\">14.7342</td></tr>\n    <tr><td headers=\"stock\" class=\"gt_row gt_left\">JPM</td>\n<td headers=\"mean\" class=\"gt_row gt_right\">0.0490%</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">1.7601%</td>\n<td headers=\"skew\" class=\"gt_row gt_right\" style=\"background-color: rgba(235,197,187,0.5); color: #000000;\">âˆ’0.0967</td>\n<td headers=\"kurt\" class=\"gt_row gt_right\" style=\"background-color: rgba(119,248,163,0.5); color: #000000;\">13.3437</td></tr>\n    <tr><td headers=\"stock\" class=\"gt_row gt_left\">NVDA</td>\n<td headers=\"mean\" class=\"gt_row gt_right\">0.1509%</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">2.8227%</td>\n<td headers=\"skew\" class=\"gt_row gt_right\" style=\"background-color: rgba(137,243,166,0.5); color: #000000;\">0.2871</td>\n<td headers=\"kurt\" class=\"gt_row gt_right\" style=\"background-color: rgba(158,237,169,0.5); color: #000000;\">10.6039</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nFor fun (the social thumb)\n\n::: {.cell}\n\n```{.r .cell-code}\nnvda_roll_plot / garch_p1\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}