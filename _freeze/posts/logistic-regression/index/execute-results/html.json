{
  "hash": "6a18fb9f59c03457f36578fa3738d35b",
  "result": {
    "markdown": "---\ntitle: Logistic regression\ndescription: Simulated insurance dataset (via simdata) and visualization of marginal effects (via ggeffects)\nauthor: David Harper, CFA, FRM\ndate: 2023-10-29\ncategories: [code, analysis]\nexecute: \n  echo: true\n  warning: false\n---\n\n\n## Simulate data with simdata package\n\nThe delightful [simdata package](https://matherealize.github.io/simdata/index.html) allows us to specify a correlation matrix and tranform (via *transformation* function) the random multivarate normal distribution into the set of desired univariate (but correlated!) distributions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(gt)\n\nlibrary(patchwork)\nlibrary(GGally); library(ggcorrplot)\nlibrary(ggeffects) # amazing package plots marginal effects\n\nlibrary(simdata)\nlibrary(matrixcalc); library(mbend)\nlibrary(gmodels) # CrossTable()\n\nlibrary(skimr)\n\n# this function in the simdata package builds a correlation\n# matrix by specifying c(col, row, rho)\ncorrelation_matrix = cor_from_upper(\n    8,\n    rbind(c(1,8,-0.20), # loyalty\n          c(2,8,-0.16), # bundle\n          c(3,8,0.12),  # jump (in price)\n          c(4,8,0.15),  # premium\n          c(5,8,-0.07), # age\n          c(6,8,-0.05), # income\n          c(7,8,0))     # mobile\n)\n\n# we require positive definite matrix\n# is.positive.definite(correlation_matrix) = TRUE\nif (!is.positive.definite(correlation_matrix)) {\n    correlation_matrix <- bend(correlation_matrix)$bent |> round(5)\n}\n\nggcorrplot(correlation_matrix,\n           colors = c(\"red\",\"white\", \"darkgreen\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntransformation <- simdata::function_list(\n    loyalty = function(z) qbeta(pnorm(z[,1]), shape1 = 2, shape2 = 5) * 30,\n    bundle_b = function(z) z[,2] > qnorm(0.7), #bundle\n    pricejump_b = function(z) z[,3] > qnorm(0.8),  # 80th for 20% probability\n    premium = function(z) pnorm(z[,4]) * (2000 - 300) + 300, # premium\n    age = function(z) pmax(18, pmin(80, z[,5] * 10 + 40)), #age\n    income = function(z) exp(z[,6] + 4), #income\n    mobile_b = function(z) z[,7] > 0, #mobile\n    churn = function(z) z[,8] > qnorm(.8)\n)\n\n# the multivarate normal design specification\nsim_design = simdata::simdesign_mvtnorm(\n  relations = correlation_matrix,\n  transform_initial = transformation,\n  prefix_final = NULL\n)\n\nsim_data = simdata::simulate_data(sim_design, n_obs = 1000, seed = 51493)\n\nsim_data$churn <- as.factor(sim_data$churn)\nsim_data$loyalty <- round(sim_data$loyalty, 1)\nsim_data$bundle_b <- as.factor(sim_data$bundle_b) #ok\nsim_data$pricejump_b <- as.factor(sim_data$pricejump_b) #ok\nsim_data$premium <- round(sim_data$premium/10)*10\nsim_data$age <- round(sim_data$age)\nsim_data$income <- round(sim_data$income/10)*10\nsim_data$mobile_b <- as.factor(sim_data$mobile_b) #ok\n\n# don't use v1, instead will split into train/test sets\n# model_sim_v1 <- glm(formula = churn ~ .,\n#        family = binomial(link = \"logit\"), data = sim_data)\n# summary(model_sim_v1)\n\nset.seed(7553695)\ntrain_sample <- sample(1000, 900)\nsim_train <- sim_data[train_sample, ]\nsim_test <- sim_data[-train_sample, ]\n\ndata_scenario_range <- data.frame(\n    loyalty = c(25,20,15,10,5,1),\n    bundle_b = as.factor(c(TRUE,TRUE,TRUE,FALSE,FALSE,FALSE)),\n    pricejump_b = as.factor(c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE)),\n    premium = c(300,500,900,1100,1600,2000),\n    age = c(70,55,40,29,24,21),\n    income = c(200,150,120,100,80,60),\n    mobile_b = as.factor(c(TRUE,FALSE,TRUE,FALSE,TRUE,FALSE))\n)\n\ndata_feature_means <- data.frame(\n    loyalty = mean(sim_train$loyalty),\n    bundle_b = as.factor(FALSE),\n    pricejump_b = as.factor(FALSE),\n    premium = mean(sim_train$premium),\n    age = mean(sim_train$age),\n    income = mean(sim_train$income),\n    mobile_b = as.factor(TRUE)\n)\n\nggpairs(sim_train, columns = 1:6, lower = \"blank\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\nskim(sim_train)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |          |\n|:------------------------|:---------|\n|Name                     |sim_train |\n|Number of rows           |900       |\n|Number of columns        |8         |\n|_______________________  |          |\n|Column type frequency:   |          |\n|factor                   |4         |\n|numeric                  |4         |\n|________________________ |          |\n|Group variables          |None      |\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts         |\n|:-------------|---------:|-------------:|:-------|--------:|:------------------|\n|bundle_b      |         0|             1|FALSE   |        2|FAL: 632, TRU: 268 |\n|pricejump_b   |         0|             1|FALSE   |        2|FAL: 720, TRU: 180 |\n|mobile_b      |         0|             1|FALSE   |        2|TRU: 463, FAL: 437 |\n|churn         |         0|             1|FALSE   |        2|FAL: 726, TRU: 174 |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|    mean|     sd|    p0|   p25|    p50|    p75|   p100|hist  |\n|:-------------|---------:|-------------:|-------:|------:|-----:|-----:|------:|------:|------:|:-----|\n|loyalty       |         0|             1|    8.49|   4.83|   0.2|   4.8|    7.9|   11.5|   24.9|▆▇▅▂▁ |\n|premium       |         0|             1| 1137.60| 486.65| 300.0| 720.0| 1120.0| 1552.5| 2000.0|▇▇▆▆▇ |\n|age           |         0|             1|   40.08|   9.52|  18.0|  33.0|   40.0|   47.0|   71.0|▂▇▇▃▁ |\n|income        |         0|             1|   87.72| 106.29|   0.0|  30.0|   50.0|  100.0| 1040.0|▇▁▁▁▁ |\n:::\n:::\n\n\n## The regression results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_sim_v2 <- glm(formula = churn ~ .,\n        family = binomial(link = \"logit\"), data = sim_train)\nsummary(model_sim_v2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = churn ~ ., family = binomial(link = \"logit\"), data = sim_train)\n\nCoefficients:\n                  Estimate Std. Error z value Pr(>|z|)    \n(Intercept)     -0.2202193  0.4613275  -0.477  0.63311    \nloyalty         -0.1179751  0.0214055  -5.511 3.56e-08 ***\nbundle_bTRUE    -0.6553063  0.2151626  -3.046  0.00232 ** \npricejump_bTRUE  0.4985342  0.2054056   2.427  0.01522 *  \npremium          0.0005120  0.0001806   2.834  0.00459 ** \nage             -0.0196931  0.0092299  -2.134  0.03287 *  \nincome          -0.0008402  0.0009273  -0.906  0.36491    \nmobile_bTRUE    -0.0086937  0.1764525  -0.049  0.96070    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 883.84  on 899  degrees of freedom\nResidual deviance: 815.98  on 892  degrees of freedom\nAIC: 831.98\n\nNumber of Fisher Scoring iterations: 5\n```\n:::\n\n```{.r .cell-code}\npredicted_probs_range <- predict(model_sim_v2, newdata = data_scenario_range, type = \"response\")\npredicted_probs_means <- predict(model_sim_v2, newdata = data_feature_means, type = \"response\")\nround(predicted_probs_range,5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      1       2       3       4       5       6 \n0.00534 0.01495 0.04387 0.18364 0.48978 0.67269 \n```\n:::\n\n```{.r .cell-code}\nround(predicted_probs_means,5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      1 \n0.18077 \n```\n:::\n\n```{.r .cell-code}\ncoef_table <- coef(summary(model_sim_v2)) \ncoef_tbl  <-  as_tibble(coef_table)\nCoeff_labels <- c(\"(Intercept)\", \"Loyalty, yrs\", \"Bundle?(T)\", \"Price Jumped?(T)\", \"Premium, $000s\", \n                 \"Age, yrs\", \"Income, $000s\",\"Mobile?(T)\")\ncoef_tbl <- cbind(Coeff_labels, coef_tbl)\n\n# Using gt() to render a table\ncoef_tbl_gt <- coef_tbl %>% gt() |> \n    opt_table_font(stack = \"humanist\") |>\n    fmt_number(columns = everything(),\n               decimals = 3)\ncoef_tbl_gt |> \n    data_color(\n        columns = 'Pr(>|z|)', \n        palette = c(\"darkseagreen1\", \"darkseagreen3\", \"darkseagreen4\"),\n        domain = c(0,0.05),\n        na_color = \"lightgrey\"\n    )\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"qfrzaebjxx\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#qfrzaebjxx table {\n  font-family: Seravek, 'Gill Sans Nova', Ubuntu, Calibri, 'DejaVu Sans', source-sans-pro, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#qfrzaebjxx thead, #qfrzaebjxx tbody, #qfrzaebjxx tfoot, #qfrzaebjxx tr, #qfrzaebjxx td, #qfrzaebjxx th {\n  border-style: none;\n}\n\n#qfrzaebjxx p {\n  margin: 0;\n  padding: 0;\n}\n\n#qfrzaebjxx .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#qfrzaebjxx .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#qfrzaebjxx .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#qfrzaebjxx .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#qfrzaebjxx .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#qfrzaebjxx .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#qfrzaebjxx .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#qfrzaebjxx .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#qfrzaebjxx .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#qfrzaebjxx .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#qfrzaebjxx .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#qfrzaebjxx .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#qfrzaebjxx .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#qfrzaebjxx .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#qfrzaebjxx .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#qfrzaebjxx .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#qfrzaebjxx .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#qfrzaebjxx .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#qfrzaebjxx .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qfrzaebjxx .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#qfrzaebjxx .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#qfrzaebjxx .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#qfrzaebjxx .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qfrzaebjxx .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#qfrzaebjxx .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#qfrzaebjxx .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#qfrzaebjxx .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qfrzaebjxx .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#qfrzaebjxx .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#qfrzaebjxx .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#qfrzaebjxx .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#qfrzaebjxx .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#qfrzaebjxx .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qfrzaebjxx .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#qfrzaebjxx .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qfrzaebjxx .gt_left {\n  text-align: left;\n}\n\n#qfrzaebjxx .gt_center {\n  text-align: center;\n}\n\n#qfrzaebjxx .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#qfrzaebjxx .gt_font_normal {\n  font-weight: normal;\n}\n\n#qfrzaebjxx .gt_font_bold {\n  font-weight: bold;\n}\n\n#qfrzaebjxx .gt_font_italic {\n  font-style: italic;\n}\n\n#qfrzaebjxx .gt_super {\n  font-size: 65%;\n}\n\n#qfrzaebjxx .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#qfrzaebjxx .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#qfrzaebjxx .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#qfrzaebjxx .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#qfrzaebjxx .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#qfrzaebjxx .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#qfrzaebjxx .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Coeff_labels\">Coeff_labels</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Estimate\">Estimate</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Std. Error\">Std. Error</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"z value\">z value</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Pr(&amp;gt;|z|)\">Pr(&gt;|z|)</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Coeff_labels\" class=\"gt_row gt_left\">(Intercept)</td>\n<td headers=\"Estimate\" class=\"gt_row gt_right\">−0.220</td>\n<td headers=\"Std. Error\" class=\"gt_row gt_right\">0.461</td>\n<td headers=\"z value\" class=\"gt_row gt_right\">−0.477</td>\n<td headers=\"Pr(>|z|)\" class=\"gt_row gt_right\" style=\"background-color: #D3D3D3; color: #000000;\">0.633</td></tr>\n    <tr><td headers=\"Coeff_labels\" class=\"gt_row gt_left\">Loyalty, yrs</td>\n<td headers=\"Estimate\" class=\"gt_row gt_right\">−0.118</td>\n<td headers=\"Std. Error\" class=\"gt_row gt_right\">0.021</td>\n<td headers=\"z value\" class=\"gt_row gt_right\">−5.511</td>\n<td headers=\"Pr(>|z|)\" class=\"gt_row gt_right\" style=\"background-color: #C1FFC1; color: #000000;\">0.000</td></tr>\n    <tr><td headers=\"Coeff_labels\" class=\"gt_row gt_left\">Bundle?(T)</td>\n<td headers=\"Estimate\" class=\"gt_row gt_right\">−0.655</td>\n<td headers=\"Std. Error\" class=\"gt_row gt_right\">0.215</td>\n<td headers=\"z value\" class=\"gt_row gt_right\">−3.046</td>\n<td headers=\"Pr(>|z|)\" class=\"gt_row gt_right\" style=\"background-color: #BDFABD; color: #000000;\">0.002</td></tr>\n    <tr><td headers=\"Coeff_labels\" class=\"gt_row gt_left\">Price Jumped?(T)</td>\n<td headers=\"Estimate\" class=\"gt_row gt_right\">0.499</td>\n<td headers=\"Std. Error\" class=\"gt_row gt_right\">0.205</td>\n<td headers=\"z value\" class=\"gt_row gt_right\">2.427</td>\n<td headers=\"Pr(>|z|)\" class=\"gt_row gt_right\" style=\"background-color: #AAE0AA; color: #000000;\">0.015</td></tr>\n    <tr><td headers=\"Coeff_labels\" class=\"gt_row gt_left\">Premium, $000s</td>\n<td headers=\"Estimate\" class=\"gt_row gt_right\">0.001</td>\n<td headers=\"Std. Error\" class=\"gt_row gt_right\">0.000</td>\n<td headers=\"z value\" class=\"gt_row gt_right\">2.834</td>\n<td headers=\"Pr(>|z|)\" class=\"gt_row gt_right\" style=\"background-color: #BAF6BA; color: #000000;\">0.005</td></tr>\n    <tr><td headers=\"Coeff_labels\" class=\"gt_row gt_left\">Age, yrs</td>\n<td headers=\"Estimate\" class=\"gt_row gt_right\">−0.020</td>\n<td headers=\"Std. Error\" class=\"gt_row gt_right\">0.009</td>\n<td headers=\"z value\" class=\"gt_row gt_right\">−2.134</td>\n<td headers=\"Pr(>|z|)\" class=\"gt_row gt_right\" style=\"background-color: #8BB88B; color: #000000;\">0.033</td></tr>\n    <tr><td headers=\"Coeff_labels\" class=\"gt_row gt_left\">Income, $000s</td>\n<td headers=\"Estimate\" class=\"gt_row gt_right\">−0.001</td>\n<td headers=\"Std. Error\" class=\"gt_row gt_right\">0.001</td>\n<td headers=\"z value\" class=\"gt_row gt_right\">−0.906</td>\n<td headers=\"Pr(>|z|)\" class=\"gt_row gt_right\" style=\"background-color: #D3D3D3; color: #000000;\">0.365</td></tr>\n    <tr><td headers=\"Coeff_labels\" class=\"gt_row gt_left\">Mobile?(T)</td>\n<td headers=\"Estimate\" class=\"gt_row gt_right\">−0.009</td>\n<td headers=\"Std. Error\" class=\"gt_row gt_right\">0.176</td>\n<td headers=\"z value\" class=\"gt_row gt_right\">−0.049</td>\n<td headers=\"Pr(>|z|)\" class=\"gt_row gt_right\" style=\"background-color: #D3D3D3; color: #000000;\">0.961</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n## Evaluate with confusion matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict_test_probs <- predict(model_sim_v2, sim_test, type = \"response\")\n\npredict_test_class <- as.factor(ifelse(predict_test_probs > 0.40, \"TRUE\", \"FALSE\"))\nCrossTable(sim_test$churn, predict_test_class,\n           prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE,\n           dnn = c(\"Actual\", \"Predicted\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n \n   Cell Contents\n|-------------------------|\n|                       N |\n|         N / Table Total |\n|-------------------------|\n\n \nTotal Observations in Table:  100 \n\n \n             | Predicted \n      Actual |     FALSE |      TRUE | Row Total | \n-------------|-----------|-----------|-----------|\n       FALSE |        75 |         2 |        77 | \n             |     0.750 |     0.020 |           | \n-------------|-----------|-----------|-----------|\n        TRUE |        21 |         2 |        23 | \n             |     0.210 |     0.020 |           | \n-------------|-----------|-----------|-----------|\nColumn Total |        96 |         4 |       100 | \n-------------|-----------|-----------|-----------|\n\n \n```\n:::\n\n```{.r .cell-code}\npredict_test_class <- as.factor(ifelse(predict_test_probs > 0.32, \"TRUE\", \"FALSE\"))\nCrossTable(sim_test$churn, predict_test_class,\n           prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE,\n           dnn = c(\"Actual\", \"Predicted\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n \n   Cell Contents\n|-------------------------|\n|                       N |\n|         N / Table Total |\n|-------------------------|\n\n \nTotal Observations in Table:  100 \n\n \n             | Predicted \n      Actual |     FALSE |      TRUE | Row Total | \n-------------|-----------|-----------|-----------|\n       FALSE |        67 |        10 |        77 | \n             |     0.670 |     0.100 |           | \n-------------|-----------|-----------|-----------|\n        TRUE |        18 |         5 |        23 | \n             |     0.180 |     0.050 |           | \n-------------|-----------|-----------|-----------|\nColumn Total |        85 |        15 |       100 | \n-------------|-----------|-----------|-----------|\n\n \n```\n:::\n:::\n\n\n## Visualization\n\nI think the most typical plot shows one predictor (ie., one feature) on the X axis while holding the other features constant. In this case, I will use Loyalty.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# test set but varying loyalty while others constant\ntest_vary_loyalty <- data.frame(\n    churn = sim_test$churn,\n    churnn = as.numeric(sim_test$churn)-1,\n    loyalty = sim_test$loyalty,\n    bundle_b = as.factor(FALSE), # the rest the same\n    pricejump_b = as.factor(FALSE),\n    premium = mean(sim_test$premium),\n    age = mean(sim_test$age),\n    income = mean(sim_test$income),\n    mobile_b = as.factor(TRUE)\n)\n    \ntest_vary_loyalty$predicted_probs <- predict(model_sim_v2, newdata = test_vary_loyalty, type = \"response\")\n\np1 <- ggplot(test_vary_loyalty, aes(x = loyalty, y = predicted_probs)) +\n    geom_line(color = \"red\", linewidth = 1) +\n    geom_jitter(aes(x = loyalty, y = churnn), color = \"black\", size = 2, width = 0.02, height = 0.02) +\n    labs(y = \"Probability of Churn\", x = \"Loyalty, yrs\") +\n    theme_minimal()\n```\n:::\n\n\n### Visualize sigmoid\n\nBut I also wanted to try plotting the sigmoid (aka, logistic) function which is given by p = 1/\\[1+exp(-z)\\] where z is the linear combination of all features. You'll notice that I appended (binded) five artificial observations merely to extend the sigmoid.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim_train2 <- sim_train\nlast_rows_n <- 5\nlast_row <- tail(sim_train2, n = last_rows_n)\nlast_row$loyalty = rep(0,last_rows_n)\nlast_row$bundle_b = rep(FALSE, last_rows_n)\nlast_row$pricejump_b = rep(TRUE, last_rows_n)\nlast_row$premium = c(3000,5000,9000,12000,14000)\nlast_row$age = rep(18, 5)\nlast_row$income = rep(40,5)\nlast_row$mobile_b = rep(FALSE, 5)\nlast_row$churn = rep(TRUE, 5)\nsim_train2 <- rbind(sim_train2, last_row)\nsim_train2f <- sim_train2\n\nsim_train2$bundle_b <- as.numeric(sim_train2$bundle_b) - 1\nsim_train2$pricejump_b <- as.numeric(sim_train2$pricejump_b) - 1\nsim_train2$mobile_b <- as.numeric(sim_train2$mobile_b) - 1\n\n# Linear combination (logit) for each observation\nsim_train2$logit <- as.matrix(sim_train2[, setdiff(names(sim_train2), \"churn\")]) %*% coef(model_sim_v2)[-1] + coef(model_sim_v2)[1]\n\n# Prediction\nsim_train2$predicted_probs <- predict(model_sim_v2, newdata = sim_train2f, type = \"response\")\nsim_train2$churn <- as.numeric(sim_train2$churn) - 1\n\np2 <- ggplot(sim_train2, aes(x = logit, y = predicted_probs)) +\n    geom_jitter(alpha = 0.5, color = \"purple\", size = 2, width = 0.02, height = 0.02) +\n    geom_jitter(aes(x = logit, y = churn), color = \"black\", size = 2, width = 0.02, height = 0.02) +\n    # Next plots the sigmoid function\n    geom_line(aes(y = 1 / (1 + exp(-logit))), color = \"red\", linewidth = 1) +\n    labs(y = \"Probability of Churn\", x = \"Logit (Linear Combination)\") +\n    coord_cartesian(xlim = c(-5,5)) +\n    theme_minimal() \n\np1 + p2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### Visualize the marginal effects\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 <- plot(ggpredict(model_sim_v2,c(\"loyalty\", \"pricejump_b\")))\np4 <- plot(ggpredict(model_sim_v2,c(\"loyalty\", \"bundle_b\")))\np3 <- p3 + coord_cartesian(ylim = c(0,.6))\np4 <- p4 + coord_cartesian(ylim = c(0,.6))\np3 + p4\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nwhat_is <- ggpredict(model_sim_v2,c(\"loyalty\", \"pricejump_b\"))\nwhat_is\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Predicted probabilities of churn\n\n# pricejump_b = FALSE\n\nloyalty | Predicted |       95% CI\n----------------------------------\n      0 |      0.38 | [0.29, 0.48]\n      5 |      0.25 | [0.20, 0.31]\n     10 |      0.16 | [0.12, 0.20]\n     15 |      0.09 | [0.06, 0.14]\n     20 |      0.05 | [0.03, 0.10]\n     25 |      0.03 | [0.01, 0.07]\n\n# pricejump_b = TRUE\n\nloyalty | Predicted |       95% CI\n----------------------------------\n      0 |      0.50 | [0.38, 0.62]\n      5 |      0.36 | [0.27, 0.45]\n     10 |      0.23 | [0.17, 0.32]\n     15 |      0.15 | [0.09, 0.22]\n     20 |      0.09 | [0.05, 0.16]\n     25 |      0.05 | [0.02, 0.11]\n\nAdjusted for:\n* bundle_b =   FALSE\n*  premium = 1137.60\n*      age =   40.08\n*   income =   87.72\n* mobile_b =   FALSE\n```\n:::\n:::\n\n\n## Numerical examples to help explain coefficient interpretation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nint_test <- data_feature_means\nint_test$loyalty = 0\nint_test\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  loyalty bundle_b pricejump_b premium      age   income mobile_b\n1       0    FALSE       FALSE  1137.6 40.07667 87.72222     TRUE\n```\n:::\n\n```{.r .cell-code}\npredict(model_sim_v2, newdata = int_test, type = \"response\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        1 \n0.3753352 \n```\n:::\n\n```{.r .cell-code}\nint_test$pricejump_b = as.factor(TRUE)\npredict(model_sim_v2, newdata = int_test, type = \"response\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        1 \n0.4972846 \n```\n:::\n\n```{.r .cell-code}\nint_test$loyalty = 1\npredict(model_sim_v2, newdata = int_test, type = \"response\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        1 \n0.4678353 \n```\n:::\n\n```{.r .cell-code}\nint_test$loyalty = 10\npredict(model_sim_v2, newdata = int_test, type = \"response\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        1 \n0.2331494 \n```\n:::\n\n```{.r .cell-code}\nint_test$pricejump_b = as.factor(FALSE)\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}