{
  "hash": "c523e6c05bb8bc89fbabf111910492eb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Country Risk Premiums\ndescription: Choropleth maps of country equity risk premiums (CERPs) and changes over the past five years\nauthor: David Harper, CFA, FRM\ndate: 2024-07-03\ncategories: [code, analysis]\nexecute: \n  echo: true\n  warning: false\n---\n\n\n\nAswath Damodaran provides country equity risk premiums (ERPs) [on his website](https://pages.stern.nyu.edu/~adamodar/). First I downloaded his Excel spreadsheets (i.e., with Country ERPs) for the last five years and consolidated them into simple sheet. \n\nClaude 3.5 Sonnet wrote most of this first code chunk; this is not an in-depth analysis, so I'm sure I failed to fix some of the unmatched countries manually. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(rnaturalearth)\n\n# Read your Excel file\nyour_data <- read_excel(\"c-erps-2cols-v2.xlsx\", sheet = \"2024n\")\n\n# Get the country data from rnaturalearth\nworld_data <- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# Function to find the best match\nfind_best_match <- function(country, reference_list) {\n  distances <- adist(country, reference_list)\n  best_match <- reference_list[which.min(distances)]\n  return(best_match)\n}\n\n# Apply the function to your data\nyour_data <- your_data %>%\n  mutate(matched_country = map_chr(country, ~find_best_match(.x, world_data$name)))\n\n# View the matches\nview(your_data %>% select(country, matched_country))\n\n# Create a manual correction list for the Jersey mismatch\nmanual_corrections <- tibble(\n  original = c(\"Jersey (States of)\", \"Yemen, Republic\"),\n  corrected = c(\"Jersey\", \"Yemen\")\n)\n\n# Apply manual corrections\nyour_data <- your_data %>%\n  left_join(manual_corrections, by = c(\"country\" = \"original\")) %>%\n  mutate(final_country = coalesce(corrected, matched_country)) %>%\n  select(-corrected, -matched_country)\n\n# Join with rnaturalearth data\njoined_data <- your_data %>%\n  left_join(world_data, by = c(\"final_country\" = \"name\"))\n\n# Function to find unmatched countries\nfind_unmatched_countries <- function(matched_data, reference_data) {\n  unmatched <- setdiff(reference_data$name, matched_data$final_country)\n  return(unmatched)\n}\n\n# Get the list of unmatched countries\nunmatched_countries <- find_unmatched_countries(your_data, world_data)\n\n# Print the unmatched countries\ncat(\"Unmatched countries:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nUnmatched countries:\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(unmatched_countries)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Afghanistan\"               \"Anguilla\"                 \n [3] \"Aland\"                     \"American Samoa\"           \n [5] \"Antarctica\"                \"Ashmore and Cartier Is.\"  \n [7] \"Fr. S. Antarctic Lands\"    \"Antigua and Barb.\"        \n [9] \"Burundi\"                   \"St-Barthélemy\"            \n[11] \"Bhutan\"                    \"Central African Rep.\"     \n[13] \"Congo\"                     \"Comoros\"                  \n[15] \"N. Cyprus\"                 \"Djibouti\"                 \n[17] \"Dominica\"                  \"Eritrea\"                  \n[19] \"Falkland Is.\"              \"Faeroe Is.\"               \n[21] \"Micronesia\"                \"Eq. Guinea\"               \n[23] \"Grenada\"                   \"Greenland\"                \n[25] \"Guam\"                      \"Heard I. and McDonald Is.\"\n[27] \"Indian Ocean Ter.\"         \"Br. Indian Ocean Ter.\"    \n[29] \"Siachen Glacier\"           \"Kiribati\"                 \n[31] \"St. Kitts and Nevis\"       \"Kosovo\"                   \n[33] \"Lao PDR\"                   \"Saint Lucia\"              \n[35] \"Lesotho\"                   \"St-Martin\"                \n[37] \"Monaco\"                    \"Marshall Is.\"             \n[39] \"N. Mariana Is.\"            \"Mauritania\"               \n[41] \"New Caledonia\"             \"Norfolk Island\"           \n[43] \"Niue\"                      \"Nepal\"                    \n[45] \"Nauru\"                     \"Pitcairn Is.\"             \n[47] \"Palau\"                     \"Puerto Rico\"              \n[49] \"Dem. Rep. Korea\"           \"Palestine\"                \n[51] \"Fr. Polynesia\"             \"W. Sahara\"                \n[53] \"S. Sudan\"                  \"S. Geo. and S. Sandw. Is.\"\n[55] \"Saint Helena\"              \"San Marino\"               \n[57] \"Somaliland\"                \"St. Pierre and Miquelon\"  \n[59] \"São Tomé and Principe\"     \"Seychelles\"               \n[61] \"Chad\"                      \"Turkmenistan\"             \n[63] \"Timor-Leste\"               \"Tonga\"                    \n[65] \"Vatican\"                   \"British Virgin Is.\"       \n[67] \"U.S. Virgin Is.\"           \"Vanuatu\"                  \n[69] \"Wallis and Futuna Is.\"     \"Samoa\"                    \n```\n\n\n:::\n\n```{.r .cell-code}\n# You can also save this to a file if needed\n# write_lines(unmatched_countries, \"unmatched_countries.txt\")\n```\n:::\n\n\n\nThe next two code chunks are a collaboration between Claude 3.5 Sonnet and me (David Harper, CFA, FRM). \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(viridis)\nlibrary(ggplot2)\nlibrary(sf)\n\njoined_data <- world_data %>%\n    left_join(your_data, by = c(\"name\" = \"final_country\"))\n\n# Create the choropleth map with improved legend\nggplot(data = joined_data) +\n    geom_sf(aes(fill = premium)) +\n    scale_fill_gradientn(\n        colors = c(\"darkgreen\", \"yellowgreen\", \"yellow\", \"orange\", \"red\"),\n        values = scales::rescale(c(0, 0.01, 0.02, 0.05, max(joined_data$premium, na.rm = TRUE))),\n        # breaks = c(0, 0.01, 0.02, 0.05, round(max(joined_data$premium, na.rm = TRUE), 2)),\n        # labels = scales::percent_format(accuracy = 0.1),\n        breaks = c(0, 0.05, 0.10, 0.15, 0.20, round(max(joined_data$premium, na.rm = TRUE), 2)),\n        labels = scales::percent_format(accuracy = 1)(c(0, 0.05, 0.10, 0.15, 0.20,\n                                                        round(max(joined_data$premium, na.rm = TRUE), 2))),\n        name = \"Country ERP\",\n        na.value = \"lightgrey\",\n        guide = guide_colorbar(\n            direction = \"horizontal\",\n            barwidth = 20,\n            barheight = 1,\n            title.position = \"top\",\n            title.hjust = 0.5,\n            label.hjust = 1,\n            ticks = TRUE,\n            frame.colour = \"black\",\n            frame.linewidth = 0.5\n        )\n    ) +\n    theme_minimal() +\n    labs(title = \"World Map of Premiums\",\n         subtitle = \"(Dark) Green is low Country ERP (~ 0) while Red is high\") +\n    theme(\n        legend.position = \"bottom\",\n        legend.box.margin = margin(t = 0, b = 4),\n        legend.title = element_text(size = 10, face = \"bold\"),\n        legend.text = element_text(size = 8),\n        plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n        plot.subtitle = element_text(hjust = 0.5, size = 12)\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Save the plot with higher resolution\nggsave(\"premium_map_improved_legend.png\", width = 15, height = 10, units = \"in\", dpi = 300)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\n\n# Ensure joined_data is still an sf object\njoined_data <- st_as_sf(joined_data)\n\n# Create the choropleth map for ERP change\nggplot() +\n    geom_sf(data = joined_data, aes(fill = change, geometry = geometry)) +\n    scale_fill_gradientn(\n        colors = c(\"darkgreen\", \"yellowgreen\", \"white\", \"orange\", \"red\"),\n        values = scales::rescale(c(min(joined_data$change, na.rm = TRUE), \n                                   -0.05, -0.025, 0, 0.025, 0.05, \n                                   max(joined_data$change, na.rm = TRUE))),\n        breaks = c(min(joined_data$change, na.rm = TRUE), \n                   -0.05, 0, 0.05, \n                   max(joined_data$change, na.rm = TRUE)),\n        labels = scales::percent_format(accuracy = 1),\n        name = \"ERP Change\",\n        na.value = \"lightgrey\",\n        guide = guide_colorbar(\n            direction = \"horizontal\",\n            barwidth = 20,\n            barheight = 1,\n            title.position = \"top\",\n            title.hjust = 0.5,\n            label.hjust = 0.5,\n            ticks = TRUE,\n            frame.colour = \"black\",\n            frame.linewidth = 0.5\n        )\n    ) +\n    theme_minimal() +\n    labs(title = \"Change in Equity Risk Premium (ERP) Over Past 5 Years\",\n         subtitle = \"Green: Decreased ERP (Positive), Red: Increased ERP (Negative)\") +\n    theme(\n        legend.position = \"bottom\",\n        legend.box.margin = margin(t = 0, b = 4),\n        legend.title = element_text(size = 10, face = \"bold\"),\n        legend.text = element_text(size = 8),\n        plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n        plot.subtitle = element_text(hjust = 0.5, size = 12)\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}