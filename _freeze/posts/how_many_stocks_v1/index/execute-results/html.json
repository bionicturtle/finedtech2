{
  "hash": "8b88c5d99e46d8e88067755283420067",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Risk and number of stocks\ndescription: Do you really need more than ten stocks?\nauthor: David Harper, CFA, FRM\ndate: 2024-11-10\ncategories: [code, analysis]\nexecute: \n  echo: true\n  warning: false\n---\n\n\n\nA variation on a very typical plot, this one shows the relationship between the number of stocks in a portfolio and the portfolio's volatility. The twist is that it also shows the \"elbow point\" for each level of correlation. The elbow point is the number of stocks at which the marginal benefit of adding more stocks to the portfolio diminishes. In other words, it's the point at which the portfolio's volatility stops decreasing as quickly as it did with fewer stocks.\n\nThe method I used to identify the elbow point is the so-called Kneedle algorithm, which is a simple way to find the \"knee\" or \"elbow\" in a curve based on perpendicular distance. The algorithm works by fitting a line between the first and last points of the curve and then finding the point farthest from that line. This point is the elbow point.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Function to calculate portfolio volatility\ncalc_portfolio_vol <- function(n_assets, correlation, sigma = 1) {\n  sqrt((1/n_assets) + ((n_assets-1)/n_assets) * correlation) * sigma\n}\n\n# Function to find elbow point using Kneedle algorithm\nfind_elbow <- function(x, y) {\n  # Normalize the data\n  x_norm <- (x - min(x)) / (max(x) - min(x))\n  y_norm <- (y - min(y)) / (max(y) - min(y))\n  \n  # Calculate the line between first and last point\n  slope <- (y_norm[length(y_norm)] - y_norm[1]) / (x_norm[length(x_norm)] - x_norm[1])\n  intercept <- y_norm[1] - slope * x_norm[1]\n  \n  # Calculate distance from points to line\n  distances <- abs(slope * x_norm + intercept - y_norm) / sqrt(slope^2 + 1)\n  \n  # Return original x value at maximum distance\n  return(x[which.max(distances)])\n}\n\n# Create plot with elbow points\nportfolio_vol_elbow_plot <- function() {\n  # Parameters\n  n_assets_seq <- 1:50\n  correlations <- seq(0, 0.95, 0.05)\n  sigma <- 1\n  \n  # Create data frame\n  plot_data <- expand.grid(\n    n_assets = n_assets_seq,\n    correlation = correlations\n  ) %>%\n    mutate(\n      volatility = mapply(calc_portfolio_vol, n_assets, correlation),\n      correlation = factor(correlation, levels = sort(unique(correlation), decreasing = TRUE))\n    )\n  \n  # Find elbow points for each correlation\n  elbow_points <- plot_data %>%\n    group_by(correlation) %>%\n    summarize(\n      elbow_n = find_elbow(n_assets, volatility),\n      elbow_vol = calc_portfolio_vol(elbow_n, first(as.numeric(as.character(correlation))))\n    )\n  \n  # Create plot\n  ggplot(plot_data, aes(x = n_assets, y = volatility, color = correlation)) +\n    geom_line(linewidth = 0.8) +\n    geom_point(data = elbow_points, \n               aes(x = elbow_n, y = elbow_vol),\n               size = 3, shape = 16) +\n    scale_color_viridis_d(\n      name = \"Correlation\",\n      option = \"magma\",\n      begin = 0.2,\n      end = 0.8,\n      direction = -1,\n      guide = guide_legend(\n        keyheight = 0.5,    # Reduce key size\n        keywidth = 1.5,     # Make keys wider than tall\n        label.theme = element_text(size = 8),  # Smaller text\n        title.theme = element_text(size = 9),  # Smaller title\n        ncol = 1,           # Force single column\n        spacing = 0.1,      # Reduce spacing between keys\n        override.aes = list(linewidth = 1)  # Thinner lines in legend\n      )\n    ) +\n    labs(\n      title = \"Portfolio Volatility vs Number of Assets\",\n      subtitle = \"With Detected Elbow Points\",\n      x = \"Number of Assets\",\n      y = \"Portfolio Volatility\"\n    ) +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(size = 14, face = \"bold\"),\n      plot.subtitle = element_text(size = 12),\n      legend.position = \"right\",\n      legend.margin = margin(1, 1, 1, 1),  # Reduce legend margin\n      legend.box.spacing = unit(0.5, \"lines\"),  # Reduce spacing around legend box\n      panel.grid.minor = element_line(color = \"gray90\"),\n      panel.grid.major = element_line(color = \"gray85\")\n    ) +\n    scale_x_continuous(breaks = seq(0, 50, 10)) +\n    scale_y_continuous(breaks = seq(0, 1, 0.1))\n}\n\n# Execute the plotting function\nportfolio_vol_elbow_plot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}